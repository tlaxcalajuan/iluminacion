

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Nov 28 11:41:59 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	bitnvCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  000E                     	;# 
   334  000E                     	;# 
   335  000F                     	;# 
   336  0010                     	;# 
   337  0011                     	;# 
   338  0012                     	;# 
   339  0013                     	;# 
   340  0014                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001B                     	;# 
   350  001C                     	;# 
   351  001D                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  0081                     	;# 
   355  0085                     	;# 
   356  0086                     	;# 
   357  0087                     	;# 
   358  0088                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  0105                     	;# 
   383  0107                     	;# 
   384  0108                     	;# 
   385  0109                     	;# 
   386  010C                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  010F                     	;# 
   391  0185                     	;# 
   392  0187                     	;# 
   393  0188                     	;# 
   394  0189                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  000E                     	;# 
   413  000F                     	;# 
   414  0010                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001D                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  0081                     	;# 
   433  0085                     	;# 
   434  0086                     	;# 
   435  0087                     	;# 
   436  0088                     	;# 
   437  0089                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  008F                     	;# 
   442  0090                     	;# 
   443  0091                     	;# 
   444  0092                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009C                     	;# 
   457  009D                     	;# 
   458  009E                     	;# 
   459  009F                     	;# 
   460  0105                     	;# 
   461  0107                     	;# 
   462  0108                     	;# 
   463  0109                     	;# 
   464  010C                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  010F                     	;# 
   469  0185                     	;# 
   470  0187                     	;# 
   471  0188                     	;# 
   472  0189                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475                           
   476                           	psect	idataBANK0
   477  072A                     __pidataBANK0:
   478                           
   479                           ;initializer for _msj_tst_uart
   480  072A  3450               	retlw	80
   481  072B  3472               	retlw	114
   482  072C  3475               	retlw	117
   483  072D  3465               	retlw	101
   484  072E  3462               	retlw	98
   485  072F  3461               	retlw	97
   486  0730  3420               	retlw	32
   487  0731  346C               	retlw	108
   488  0732  3469               	retlw	105
   489  0733  3473               	retlw	115
   490  0734  3474               	retlw	116
   491  0735  3461               	retlw	97
   492  0736  340D               	retlw	13
   493  0737  3400               	retlw	0
   494                           
   495                           ;initializer for _Qd
   496  0738  3464               	retlw	100
   497                           
   498                           ;initializer for _Qt
   499  0739  3403               	retlw	3
   500                           
   501                           	psect	idataBANK1
   502  0718                     __pidataBANK1:
   503                           
   504                           ;initializer for _msj_deploy
   505  0718  3444               	retlw	68
   506  0719  3465               	retlw	101
   507  071A  3470               	retlw	112
   508  071B  346C               	retlw	108
   509  071C  346F               	retlw	111
   510  071D  3479               	retlw	121
   511  071E  3420               	retlw	32
   512  071F  3453               	retlw	83
   513  0720  3479               	retlw	121
   514  0721  3473               	retlw	115
   515  0722  3474               	retlw	116
   516  0723  3465               	retlw	101
   517  0724  346D               	retlw	109
   518  0725  342E               	retlw	46
   519  0726  342E               	retlw	46
   520  0727  342E               	retlw	46
   521  0728  340D               	retlw	13
   522  0729  3400               	retlw	0
   523                           
   524                           	psect	idataBANK3
   525  0615                     __pidataBANK3:
   526                           
   527                           ;initializer for _msj_cnf_param
   528  0615  3443               	retlw	67
   529  0616  346F               	retlw	111
   530  0617  346E               	retlw	110
   531  0618  3466               	retlw	102
   532  0619  3469               	retlw	105
   533  061A  3467               	retlw	103
   534  061B  3475               	retlw	117
   535  061C  3472               	retlw	114
   536  061D  3461               	retlw	97
   537  061E  3463               	retlw	99
   538  061F  3469               	retlw	105
   539  0620  346F               	retlw	111
   540  0621  346E               	retlw	110
   541  0622  3420               	retlw	32
   542  0623  3464               	retlw	100
   543  0624  3465               	retlw	101
   544  0625  3420               	retlw	32
   545  0626  3470               	retlw	112
   546  0627  3461               	retlw	97
   547  0628  3472               	retlw	114
   548  0629  3461               	retlw	97
   549  062A  346D               	retlw	109
   550  062B  3465               	retlw	101
   551  062C  3474               	retlw	116
   552  062D  3472               	retlw	114
   553  062E  346F               	retlw	111
   554  062F  3473               	retlw	115
   555  0630  3420               	retlw	32
   556  0631  346C               	retlw	108
   557  0632  3469               	retlw	105
   558  0633  3473               	retlw	115
   559  0634  3474               	retlw	116
   560  0635  3461               	retlw	97
   561  0636  340D               	retlw	13
   562  0637  3400               	retlw	0
   563                           
   564                           	psect	strings
   565  0336                     __pstrings:
   566  0336                     stringtab:
   567  0336                     __stringtab:
   568                           
   569                           ;	String table - string pointers are 1 byte each
   570  0336  1BFF               	btfsc	btemp+1,7
   571  0337  2B40               	ljmp	stringcode
   572  0338  1383               	bcf	3,7
   573  0339  187F               	btfsc	btemp+1,0
   574  033A  1783               	bsf	3,7
   575  033B  0800               	movf	0,w
   576  033C  0A84               	incf	4,f
   577  033D  1903               	skipnz
   578  033E  0AFF               	incf	btemp+1,f
   579  033F  0008               	return
   580  0340                     stringcode:
   581  0340                     stringdir:
   582  0340  3003               	movlw	high stringdir
   583  0341  008A               	movwf	10
   584  0342  0804               	movf	4,w
   585  0343  0A84               	incf	4,f
   586  0344  0782               	addwf	2,f
   587  0345                     __stringbase:
   588  0345  3400               	retlw	0
   589  0346                     __end_of__stringtab:
   590  0346                     _dpowers:
   591  0346  3401               	retlw	1
   592  0347  3400               	retlw	0
   593  0348  340A               	retlw	10
   594  0349  3400               	retlw	0
   595  034A  3464               	retlw	100
   596  034B  3400               	retlw	0
   597  034C  34E8               	retlw	232
   598  034D  3403               	retlw	3
   599  034E  3410               	retlw	16
   600  034F  3427               	retlw	39
   601  0350                     __end_of_dpowers:
   602  0350                     STR_1:
   603  0350  3469               	retlw	105	;'i'
   604  0351  343A               	retlw	58	;':'
   605  0352  3420               	retlw	32	;' '
   606  0353  3425               	retlw	37	;'%'
   607  0354  3475               	retlw	117	;'u'
   608  0355  342C               	retlw	44	;','
   609  0356  3420               	retlw	32	;' '
   610  0357  3464               	retlw	100	;'d'
   611  0358  343A               	retlw	58	;':'
   612  0359  3420               	retlw	32	;' '
   613  035A  3425               	retlw	37	;'%'
   614  035B  3475               	retlw	117	;'u'
   615  035C  342C               	retlw	44	;','
   616  035D  3420               	retlw	32	;' '
   617  035E  3474               	retlw	116	;'t'
   618  035F  343A               	retlw	58	;':'
   619  0360  3420               	retlw	32	;' '
   620  0361  3425               	retlw	37	;'%'
   621  0362  3475               	retlw	117	;'u'
   622  0363  342C               	retlw	44	;','
   623  0364  3420               	retlw	32	;' '
   624  0365  3472               	retlw	114	;'r'
   625  0366  343A               	retlw	58	;':'
   626  0367  3420               	retlw	32	;' '
   627  0368  3425               	retlw	37	;'%'
   628  0369  3475               	retlw	117	;'u'
   629  036A  342C               	retlw	44	;','
   630  036B  3420               	retlw	32	;' '
   631  036C  3467               	retlw	103	;'g'
   632  036D  343A               	retlw	58	;':'
   633  036E  3420               	retlw	32	;' '
   634  036F  3425               	retlw	37	;'%'
   635  0370  3475               	retlw	117	;'u'
   636  0371  342C               	retlw	44	;','
   637  0372  3420               	retlw	32	;' '
   638  0373  3462               	retlw	98	;'b'
   639  0374  343A               	retlw	58	;':'
   640  0375  3420               	retlw	32	;' '
   641  0376  3425               	retlw	37	;'%'
   642  0377  3475               	retlw	117	;'u'
   643  0378  340D               	retlw	13
   644  0379  340A               	retlw	10
   645  037A  3400               	retlw	0
   646  037B                     STR_3:
   647  037B  3465               	retlw	101	;'e'
   648  037C  3473               	retlw	115	;'s'
   649  037D  3474               	retlw	116	;'t'
   650  037E  3465               	retlw	101	;'e'
   651  037F  3420               	retlw	32	;' '
   652  0380  3465               	retlw	101	;'e'
   653  0381  3473               	retlw	115	;'s'
   654  0382  3420               	retlw	32	;' '
   655  0383  346D               	retlw	109	;'m'
   656  0384  3469               	retlw	105	;'i'
   657  0385  3420               	retlw	32	;' '
   658  0386  3470               	retlw	112	;'p'
   659  0387  3469               	retlw	105	;'i'
   660  0388  346E               	retlw	110	;'n'
   661  0389  3463               	retlw	99	;'c'
   662  038A  3468               	retlw	104	;'h'
   663  038B  3469               	retlw	105	;'i'
   664  038C  3420               	retlw	32	;' '
   665  038D  346D               	retlw	109	;'m'
   666  038E  3465               	retlw	101	;'e'
   667  038F  346E               	retlw	110	;'n'
   668  0390  3473               	retlw	115	;'s'
   669  0391  3461               	retlw	97	;'a'
   670  0392  346A               	retlw	106	;'j'
   671  0393  3465               	retlw	101	;'e'
   672  0394  3400               	retlw	0
   673  0395                     STR_2:
   674  0395  3449               	retlw	73	;'I'
   675  0396  344E               	retlw	78	;'N'
   676  0397  3449               	retlw	73	;'I'
   677  0398  3443               	retlw	67	;'C'
   678  0399  3449               	retlw	73	;'I'
   679  039A  3441               	retlw	65	;'A'
   680  039B  344E               	retlw	78	;'N'
   681  039C  3444               	retlw	68	;'D'
   682  039D  344F               	retlw	79	;'O'
   683  039E  3400               	retlw	0
   684                           
   685                           	psect	bitnvCOMMON
   686  03D8                     __pbitnvCOMMON:
   687  03D8                     _START:
   688  03D8                     	ds	1
   689                           
   690                           	psect	nvBANK0
   691  0065                     __pnvBANK0:
   692  0065                     _BAUDIOS:
   693  0065                     	ds	2
   694  0011                     _TMR2	set	17
   695  0012                     _T2CON	set	18
   696  0019                     _TXREG	set	25
   697  0018                     _RCSTA	set	24
   698  0007                     _PORTCbits	set	7
   699  0006                     _PORTBbits	set	6
   700  001A                     _RCREG	set	26
   701  000C                     _PIR1bits	set	12
   702  0001                     _TMR0	set	1
   703  000B                     _INTCONbits	set	11
   704  001B                     _CCPR2L	set	27
   705  001D                     _CCP2CON	set	29
   706  0015                     _CCPR1L	set	21
   707  0017                     _CCP1CON	set	23
   708  0008                     _PORTD	set	8
   709  0007                     _PORTC	set	7
   710  0006                     _PORTB	set	6
   711  000B                     _INTCON	set	11
   712  000C                     _PIR1	set	12
   713  0061                     _TMR2IF	set	97
   714  005D                     _TMR0IE	set	93
   715  005A                     _TMR0IF	set	90
   716  00C4                     _CREN	set	196
   717  0092                     _PR2	set	146
   718  0081                     _OPTION_REG	set	129
   719  0099                     _SPBRG	set	153
   720  0098                     _TXSTA	set	152
   721  0087                     _TRISCbits	set	135
   722  008F                     _OSCCONbits	set	143
   723  0088                     _TRISD	set	136
   724  008C                     _PIE1	set	140
   725  0087                     _TRISC	set	135
   726  0086                     _TRISB	set	134
   727  0461                     _TMR2IE	set	1121
   728  04C1                     _TRMT	set	1217
   729  010C                     _EEDAT	set	268
   730  010D                     _EEADR	set	269
   731  018D                     _EECON2	set	397
   732  018C                     _EECON1bits	set	396
   733  0189                     _ANSELH	set	393
   734  0188                     _ANSEL	set	392
   735                           
   736                           	psect	cinit
   737  0015                     start_initialization:	
   738                           ; #config settings
   739                           
   740  0015                     __initialization:
   741                           
   742                           ; Initialize objects allocated to BANK3
   743  0015  1783               	bsf	3,7	;select IRP bank2
   744  0016  30B3               	movlw	low (__pdataBANK3+35)
   745  0017  00FD               	movwf	btemp+-1
   746  0018  3006               	movlw	high __pidataBANK3
   747  0019  00FE               	movwf	btemp
   748  001A  3015               	movlw	low __pidataBANK3
   749  001B  00FF               	movwf	btemp+1
   750  001C  3090               	movlw	low __pdataBANK3
   751  001D  0084               	movwf	4
   752  001E  120A  118A  2709  120A  118A  	fcall	init_ram0
   753                           
   754                           ; Initialize objects allocated to BANK1
   755  0023  1383               	bcf	3,7	;select IRP bank0
   756  0024  30D5               	movlw	low (__pdataBANK1+18)
   757  0025  00FD               	movwf	btemp+-1
   758  0026  3007               	movlw	high __pidataBANK1
   759  0027  00FE               	movwf	btemp
   760  0028  3018               	movlw	low __pidataBANK1
   761  0029  00FF               	movwf	btemp+1
   762  002A  30C3               	movlw	low __pdataBANK1
   763  002B  0084               	movwf	4
   764  002C  120A  118A  2709  120A  118A  	fcall	init_ram0
   765                           
   766                           ; Initialize objects allocated to BANK0
   767  0031  3065               	movlw	low (__pdataBANK0+16)
   768  0032  00FD               	movwf	btemp+-1
   769  0033  3007               	movlw	high __pidataBANK0
   770  0034  00FE               	movwf	btemp
   771  0035  302A               	movlw	low __pidataBANK0
   772  0036  00FF               	movwf	btemp+1
   773  0037  3055               	movlw	low __pdataBANK0
   774  0038  0084               	movwf	4
   775  0039  120A  118A  2709  120A  118A  	fcall	init_ram0
   776                           
   777                           ; Clear objects allocated to BANK1
   778  003E  30A0               	movlw	low __pbssBANK1
   779  003F  0084               	movwf	4
   780  0040  30C3               	movlw	low (__pbssBANK1+35)
   781  0041  120A  118A  2774  120A  118A  	fcall	clear_ram0
   782                           
   783                           ; Clear objects allocated to BANK0
   784  0046  3045               	movlw	low __pbssBANK0
   785  0047  0084               	movwf	4
   786  0048  3055               	movlw	low (__pbssBANK0+16)
   787  0049  120A  118A  2774  120A  118A  	fcall	clear_ram0
   788                           
   789                           ; Clear objects allocated to COMMON
   790  004E  01F6               	clrf	__pbssCOMMON& (0+127)
   791  004F  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   792  0050  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   793  0051  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   794  0052  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   795  0053                     end_of_initialization:	
   796                           ;End of C runtime variable initialization code
   797                           
   798  0053                     __end_of__initialization:
   799  0053  0183               	clrf	3
   800  0054  120A  118A  29C3   	ljmp	_main	;jump to C main() function
   801                           
   802                           	psect	bssCOMMON
   803  0076                     __pbssCOMMON:
   804  0076                     _dato:
   805  0076                     	ds	1
   806  0077                     _escritura:
   807  0077                     	ds	1
   808  0078                     _i:
   809  0078                     	ds	1
   810  0079                     _cnt:
   811  0079                     	ds	1
   812  007A                     _cnt_Seg:
   813  007A                     	ds	1
   814                           
   815                           	psect	bssBANK0
   816  0045                     __pbssBANK0:
   817  0045                     _centimeters:
   818  0045                     	ds	2
   819  0047                     _time_ON:
   820  0047                     	ds	2
   821  0049                     _distance_to_ON:
   822  0049                     	ds	2
   823  004B                     _distance:
   824  004B                     	ds	2
   825  004D                     _direccion:
   826  004D                     	ds	1
   827  004E                     _lectura:
   828  004E                     	ds	1
   829  004F                     _flag_rx:
   830  004F                     	ds	1
   831  0050                     _cuenta:
   832  0050                     	ds	1
   833  0051                     _cnt_Deathline:
   834  0051                     	ds	1
   835  0052                     _Qb:
   836  0052                     	ds	1
   837  0053                     _Qg:
   838  0053                     	ds	1
   839  0054                     _Qr:
   840  0054                     	ds	1
   841                           
   842                           	psect	dataBANK0
   843  0055                     __pdataBANK0:
   844  0055                     _msj_tst_uart:
   845  0055                     	ds	14
   846  0063                     _Qd:
   847  0063                     	ds	1
   848  0064                     _Qt:
   849  0064                     	ds	1
   850                           
   851                           	psect	bssBANK1
   852  00A0                     __pbssBANK1:
   853  00A0                     _msj_packet:
   854  00A0                     	ds	35
   855                           
   856                           	psect	dataBANK1
   857  00C3                     __pdataBANK1:
   858  00C3                     _msj_deploy:
   859  00C3                     	ds	18
   860                           
   861                           	psect	dataBANK3
   862  0190                     __pdataBANK3:
   863  0190                     _msj_cnf_param:
   864  0190                     	ds	35
   865                           
   866                           	psect	inittext
   867  0705                     init_fetch0:	
   868                           ;	Called with low address in FSR and high address in W
   869                           
   870  0705  087E               	movf	btemp,w
   871  0706  008A               	movwf	10
   872  0707  087F               	movf	btemp+1,w
   873  0708  0082               	movwf	2
   874  0709                     init_ram0:	
   875                           ;Called with:
   876                           ;	high address of idata address in btemp 
   877                           ;	low address of idata address in btemp+1 
   878                           ;	low address of data in FSR
   879                           ;	high address + 1 of data in btemp-1
   880                           
   881  0709  120A  118A  2705  120A  118A  	fcall	init_fetch0
   882  070E  0080               	movwf	0
   883  070F  0A84               	incf	4,f
   884  0710  0804               	movf	4,w
   885  0711  067D               	xorwf	btemp+-1,w
   886  0712  1903               	btfsc	3,2
   887  0713  3400               	retlw	0
   888  0714  0AFF               	incf	btemp+1,f
   889  0715  1903               	btfsc	3,2
   890  0716  0AFE               	incf	btemp,f
   891  0717  2F09               	goto	init_ram0
   892                           
   893                           	psect	clrtext
   894  0774                     clear_ram0:	
   895                           ;	Called with FSR containing the base address, and
   896                           ;	W with the last address+1
   897                           
   898  0774  0064               	clrwdt	;clear the watchdog before getting into this loop
   899  0775                     clrloop0:
   900  0775  0180               	clrf	0	;clear RAM location pointed to by FSR
   901  0776  0A84               	incf	4,f	;increment pointer
   902  0777  0604               	xorwf	4,w	;XOR with final address
   903  0778  1903               	btfsc	3,2	;have we reached the end yet?
   904  0779  3400               	retlw	0	;all done for this memory range, return
   905  077A  0604               	xorwf	4,w	;XOR again to restore value
   906  077B  2F75               	goto	clrloop0	;do the next byte
   907                           
   908                           	psect	cstackCOMMON
   909  0070                     __pcstackCOMMON:
   910  0070                     ?_TMR2_Cnf:
   911  0070                     ?_EEPROM_Read:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_PIC_Init:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ?_MCU_Init:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ?_PWM_Init:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_pulsos:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ??_pulsos:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_loop:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_Color_Start:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_CNF_Default:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ?_CNF_Load:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_main:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ?_USART_SendChar:	
   945                           ; 1 bytes @ 0x0
   946                           
   947                           
   948                           ; 1 bytes @ 0x0
   949  0070                     	ds	6
   950                           
   951                           	psect	cstackBANK0
   952  0020                     __pcstackBANK0:
   953  0020                     ??_TMR2_Cnf:
   954  0020                     ??_EEPROM_Read:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0020                     ?_memset:	
   958                           ; 1 bytes @ 0x0
   959                           
   960  0020                     ??_PIC_Init:	
   961                           ; 1 bytes @ 0x0
   962                           
   963  0020                     ??_MCU_Init:	
   964                           ; 1 bytes @ 0x0
   965                           
   966  0020                     ??_PWM_Init:	
   967                           ; 1 bytes @ 0x0
   968                           
   969  0020                     ??_loop:	
   970                           ; 1 bytes @ 0x0
   971                           
   972  0020                     ??_Color_Start:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0020                     ?_CNF_Distance:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0020                     ?_CNF_Time:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0020                     ??_USART_SendChar:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0020                     ?_EEPROM_Write:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0020                     ?___wmul:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0020                     ?___lwdiv:	
   991                           ; 2 bytes @ 0x0
   992                           
   993  0020                     ?___aldiv:	
   994                           ; 2 bytes @ 0x0
   995                           
   996  0020                     USART_SendChar@caracter:	
   997                           ; 4 bytes @ 0x0
   998                           
   999  0020                     EEPROM_Write@write:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0020                     CNF_Distance@dist_ON:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0020                     CNF_Time@tiempo_ON:	
  1006                           ; 2 bytes @ 0x0
  1007                           
  1008  0020                     ___wmul@multiplier:	
  1009                           ; 2 bytes @ 0x0
  1010                           
  1011  0020                     ___lwdiv@divisor:	
  1012                           ; 2 bytes @ 0x0
  1013                           
  1014  0020                     memset@c:	
  1015                           ; 2 bytes @ 0x0
  1016                           
  1017  0020                     ___aldiv@divisor:	
  1018                           ; 2 bytes @ 0x0
  1019                           
  1020                           
  1021                           ; 4 bytes @ 0x0
  1022  0020                     	ds	1
  1023  0021                     ?_USART_SendText:
  1024  0021                     ??_EEPROM_Write:	
  1025                           ; 1 bytes @ 0x1
  1026                           
  1027  0021                     USART_SendText@cadena:	
  1028                           ; 1 bytes @ 0x1
  1029                           
  1030                           
  1031                           ; 2 bytes @ 0x1
  1032  0021                     	ds	1
  1033  0022                     ??_CNF_Distance:
  1034  0022                     ??_CNF_Time:	
  1035                           ; 1 bytes @ 0x2
  1036                           
  1037  0022                     EEPROM_Read@address:	
  1038                           ; 1 bytes @ 0x2
  1039                           
  1040  0022                     ___wmul@multiplicand:	
  1041                           ; 1 bytes @ 0x2
  1042                           
  1043  0022                     ___lwdiv@dividend:	
  1044                           ; 2 bytes @ 0x2
  1045                           
  1046  0022                     memset@n:	
  1047                           ; 2 bytes @ 0x2
  1048                           
  1049                           
  1050                           ; 2 bytes @ 0x2
  1051  0022                     	ds	1
  1052  0023                     ??_USART_SendText:
  1053  0023                     EEPROM_Write@address:	
  1054                           ; 1 bytes @ 0x3
  1055                           
  1056                           
  1057                           ; 1 bytes @ 0x3
  1058  0023                     	ds	1
  1059  0024                     ?_EEPROM_Save:
  1060  0024                     ??_memset:	
  1061                           ; 1 bytes @ 0x4
  1062                           
  1063  0024                     ??___wmul:	
  1064                           ; 1 bytes @ 0x4
  1065                           
  1066  0024                     ??___lwdiv:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069  0024                     EEPROM_Save@Qd:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072  0024                     ___lwdiv@counter:	
  1073                           ; 1 bytes @ 0x4
  1074                           
  1075  0024                     memset@p:	
  1076                           ; 1 bytes @ 0x4
  1077                           
  1078  0024                     ___wmul@product:	
  1079                           ; 1 bytes @ 0x4
  1080                           
  1081  0024                     ___aldiv@dividend:	
  1082                           ; 2 bytes @ 0x4
  1083                           
  1084                           
  1085                           ; 4 bytes @ 0x4
  1086  0024                     	ds	1
  1087  0025                     EEPROM_Save@Qt:
  1088  0025                     memset@p1:	
  1089                           ; 1 bytes @ 0x5
  1090                           
  1091  0025                     ___lwdiv@quotient:	
  1092                           ; 1 bytes @ 0x5
  1093                           
  1094                           
  1095                           ; 2 bytes @ 0x5
  1096  0025                     	ds	1
  1097  0026                     ?___awdiv:
  1098  0026                     EEPROM_Save@Qr:	
  1099                           ; 2 bytes @ 0x6
  1100                           
  1101  0026                     ___awdiv@divisor:	
  1102                           ; 1 bytes @ 0x6
  1103                           
  1104                           
  1105                           ; 2 bytes @ 0x6
  1106  0026                     	ds	1
  1107  0027                     ?___lwmod:
  1108  0027                     EEPROM_Save@Qg:	
  1109                           ; 2 bytes @ 0x7
  1110                           
  1111  0027                     ___lwmod@divisor:	
  1112                           ; 1 bytes @ 0x7
  1113                           
  1114                           
  1115                           ; 2 bytes @ 0x7
  1116  0027                     	ds	1
  1117  0028                     ??___aldiv:
  1118  0028                     EEPROM_Save@Qb:	
  1119                           ; 1 bytes @ 0x8
  1120                           
  1121  0028                     ___awdiv@dividend:	
  1122                           ; 1 bytes @ 0x8
  1123                           
  1124                           
  1125                           ; 2 bytes @ 0x8
  1126  0028                     	ds	1
  1127  0029                     ??_EEPROM_Save:
  1128  0029                     EEPROM_Save@i:	
  1129                           ; 1 bytes @ 0x9
  1130                           
  1131  0029                     ___aldiv@counter:	
  1132                           ; 1 bytes @ 0x9
  1133                           
  1134  0029                     ___lwmod@dividend:	
  1135                           ; 1 bytes @ 0x9
  1136                           
  1137                           
  1138                           ; 2 bytes @ 0x9
  1139  0029                     	ds	1
  1140  002A                     ??___awdiv:
  1141  002A                     ___aldiv@sign:	
  1142                           ; 1 bytes @ 0xA
  1143                           
  1144  002A                     ___awdiv@counter:	
  1145                           ; 1 bytes @ 0xA
  1146                           
  1147                           
  1148                           ; 1 bytes @ 0xA
  1149  002A                     	ds	1
  1150  002B                     ??___lwmod:
  1151  002B                     ___awdiv@sign:	
  1152                           ; 1 bytes @ 0xB
  1153                           
  1154  002B                     ___lwmod@counter:	
  1155                           ; 1 bytes @ 0xB
  1156                           
  1157  002B                     ___aldiv@quotient:	
  1158                           ; 1 bytes @ 0xB
  1159                           
  1160                           
  1161                           ; 4 bytes @ 0xB
  1162  002B                     	ds	1
  1163  002C                     ?_sprintf:
  1164  002C                     sprintf@f:	
  1165                           ; 2 bytes @ 0xC
  1166                           
  1167  002C                     ___awdiv@quotient:	
  1168                           ; 1 bytes @ 0xC
  1169                           
  1170                           
  1171                           ; 2 bytes @ 0xC
  1172  002C                     	ds	2
  1173  002E                     ?_CNF_Color:
  1174  002E                     CNF_Color@G:	
  1175                           ; 1 bytes @ 0xE
  1176                           
  1177                           
  1178                           ; 1 bytes @ 0xE
  1179  002E                     	ds	1
  1180  002F                     ?_USART_Init:
  1181  002F                     CNF_Color@B:	
  1182                           ; 1 bytes @ 0xF
  1183                           
  1184  002F                     USART_Init@XTAL:	
  1185                           ; 1 bytes @ 0xF
  1186                           
  1187                           
  1188                           ; 4 bytes @ 0xF
  1189  002F                     	ds	1
  1190  0030                     ??_CNF_Color:
  1191                           
  1192                           ; 1 bytes @ 0x10
  1193  0030                     	ds	2
  1194  0032                     CNF_Color@R:
  1195                           
  1196                           ; 1 bytes @ 0x12
  1197  0032                     	ds	1
  1198  0033                     ??_CNF_Default:
  1199  0033                     ??_CNF_Load:	
  1200                           ; 1 bytes @ 0x13
  1201                           
  1202  0033                     USART_Init@baudrate:	
  1203                           ; 1 bytes @ 0x13
  1204                           
  1205                           
  1206                           ; 4 bytes @ 0x13
  1207  0033                     	ds	4
  1208  0037                     ??_USART_Init:
  1209                           
  1210                           ; 1 bytes @ 0x17
  1211  0037                     	ds	2
  1212  0039                     ??_sprintf:
  1213                           
  1214                           ; 1 bytes @ 0x19
  1215  0039                     	ds	3
  1216  003C                     sprintf@flag:
  1217                           
  1218                           ; 1 bytes @ 0x1C
  1219  003C                     	ds	1
  1220  003D                     sprintf@ap:
  1221                           
  1222                           ; 1 bytes @ 0x1D
  1223  003D                     	ds	1
  1224  003E                     sprintf@val:
  1225                           
  1226                           ; 2 bytes @ 0x1E
  1227  003E                     	ds	2
  1228  0040                     sprintf@prec:
  1229                           
  1230                           ; 1 bytes @ 0x20
  1231  0040                     	ds	1
  1232  0041                     sprintf@sp:
  1233                           
  1234                           ; 1 bytes @ 0x21
  1235  0041                     	ds	1
  1236  0042                     sprintf@c:
  1237                           
  1238                           ; 1 bytes @ 0x22
  1239  0042                     	ds	1
  1240  0043                     ??_main:
  1241                           
  1242                           ; 1 bytes @ 0x23
  1243  0043                     	ds	2
  1244                           
  1245                           	psect	maintext
  1246  01C3                     __pmaintext:	
  1247 ;;
  1248 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1249 ;;
  1250 ;; *************** function _main *****************
  1251 ;; Defined at:
  1252 ;;		line 255 in file "main.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : B00/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0
  1268 ;;      Temps:          0       2       0       0       0
  1269 ;;      Totals:         0       2       0       0       0
  1270 ;;Total ram usage:        2 bytes
  1271 ;; Hardware stack levels required when called:    4
  1272 ;; This function calls:
  1273 ;;		_CNF_Default
  1274 ;;		_CNF_Load
  1275 ;;		_Color_Start
  1276 ;;		_EEPROM_Read
  1277 ;;		_MCU_Init
  1278 ;;		_USART_Init
  1279 ;;		_USART_SendText
  1280 ;;		_memset
  1281 ;;		_sprintf
  1282 ;; This function is called by:
  1283 ;;		Startup code after reset
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _main
  1289  01C3                     _main:
  1290  01C3                     l2403:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1293                           
  1294                           
  1295                           ;main.c: 256:     MCU_Init();
  1296  01C3  120A  118A  276B  120A  118A  	fcall	_MCU_Init
  1297  01C8                     l2405:
  1298                           
  1299                           ;main.c: 257:     USART_Init(8000000, 9600);
  1300  01C8  3000               	movlw	0
  1301  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1302  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1303  01CB  00B2               	movwf	USART_Init@XTAL+3
  1304  01CC  307A               	movlw	122
  1305  01CD  00B1               	movwf	USART_Init@XTAL+2
  1306  01CE  3012               	movlw	18
  1307  01CF  00B0               	movwf	USART_Init@XTAL+1
  1308  01D0  3000               	movlw	0
  1309  01D1  00AF               	movwf	USART_Init@XTAL
  1310  01D2  3000               	movlw	0
  1311  01D3  00B6               	movwf	USART_Init@baudrate+3
  1312  01D4  3000               	movlw	0
  1313  01D5  00B5               	movwf	USART_Init@baudrate+2
  1314  01D6  3025               	movlw	37
  1315  01D7  00B4               	movwf	USART_Init@baudrate+1
  1316  01D8  3080               	movlw	128
  1317  01D9  00B3               	movwf	USART_Init@baudrate
  1318  01DA  120A  118A  2258  120A  118A  	fcall	_USART_Init
  1319  01DF                     l2407:
  1320                           
  1321                           ;main.c: 258:     memset(msj_packet,0,35);
  1322  01DF  3000               	movlw	0
  1323  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1324  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1325  01E2  00A0               	movwf	memset@c
  1326  01E3  00A1               	movwf	memset@c+1
  1327  01E4  3023               	movlw	35
  1328  01E5  00A2               	movwf	memset@n
  1329  01E6  3000               	movlw	0
  1330  01E7  00A3               	movwf	memset@n+1
  1331  01E8  30A0               	movlw	(low (_msj_packet| 0))& (0+255)
  1332  01E9  120A  118A  265B  120A  118A  	fcall	_memset
  1333  01EE                     l2409:
  1334                           
  1335                           ;main.c: 259:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1336  01EE  3082               	movlw	130
  1337  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1338  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1339  01F1  00C4               	movwf	??_main+1
  1340  01F2  30DD               	movlw	221
  1341  01F3  00C3               	movwf	??_main
  1342  01F4                     u2027:
  1343  01F4  0BC3               	decfsz	??_main,f
  1344  01F5  29F4               	goto	u2027
  1345  01F6  0BC4               	decfsz	??_main+1,f
  1346  01F7  29F4               	goto	u2027
  1347  01F8                     l2411:
  1348                           
  1349                           ;main.c: 261:     USART_SendText("INICIANDO");
  1350  01F8  3050               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1351  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1352  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1353  01FB  00A1               	movwf	USART_SendText@cadena
  1354  01FC  3080               	movlw	128
  1355  01FD  00A2               	movwf	USART_SendText@cadena+1
  1356  01FE  120A  118A  25C6  120A  118A  	fcall	_USART_SendText
  1357  0203                     l2413:
  1358                           
  1359                           ;main.c: 268:     lectura = EEPROM_Read(50);
  1360  0203  3032               	movlw	50
  1361  0204  120A  118A  26BC  120A  118A  	fcall	_EEPROM_Read
  1362  0209  00FF               	movwf	btemp+1
  1363  020A  087F               	movf	btemp+1,w
  1364  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1365  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1366  020D  00CE               	movwf	_lectura
  1367  020E                     l2415:
  1368                           
  1369                           ;main.c: 269:     if(lectura == 127){
  1370  020E  307F               	movlw	127
  1371  020F  064E               	xorwf	_lectura,w
  1372  0210  1D03               	btfss	3,2
  1373  0211  2A13               	goto	u2001
  1374  0212  2A14               	goto	u2000
  1375  0213                     u2001:
  1376  0213  2A1A               	goto	l2419
  1377  0214                     u2000:
  1378  0214                     l2417:
  1379                           
  1380                           ;main.c: 270:         CNF_Load();
  1381  0214  120A  118A  2408  120A  118A  	fcall	_CNF_Load
  1382                           
  1383                           ;main.c: 272:     }else{
  1384  0219  2A1F               	goto	l2421
  1385  021A                     l2419:
  1386                           
  1387                           ;main.c: 273:         CNF_Default();
  1388  021A  120A  118A  2466  120A  118A  	fcall	_CNF_Default
  1389  021F                     l2421:
  1390                           
  1391                           ;main.c: 284:         if(flag_rx == 1){
  1392  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0221  034F               	decf	_flag_rx,w
  1395  0222  1D03               	btfss	3,2
  1396  0223  2A25               	goto	u2011
  1397  0224  2A26               	goto	u2010
  1398  0225                     u2011:
  1399  0225  2A1F               	goto	l2421
  1400  0226                     u2010:
  1401  0226                     l2423:
  1402                           
  1403                           ;main.c: 285:             memset(msj_packet,0,35);
  1404  0226  3000               	movlw	0
  1405  0227  00A0               	movwf	memset@c
  1406  0228  00A1               	movwf	memset@c+1
  1407  0229  3023               	movlw	35
  1408  022A  00A2               	movwf	memset@n
  1409  022B  3000               	movlw	0
  1410  022C  00A3               	movwf	memset@n+1
  1411  022D  30A0               	movlw	(low (_msj_packet| 0))& (0+255)
  1412  022E  120A  118A  265B  120A  118A  	fcall	_memset
  1413                           
  1414                           ;main.c: 286:             sprintf(msj_packet,"este es mi pinchi mensaje");
  1415  0233  3036               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1416  0234  00FF               	movwf	btemp+1
  1417  0235  087F               	movf	btemp+1,w
  1418  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1419  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1420  0238  00AC               	movwf	sprintf@f
  1421  0239  30A0               	movlw	(low (_msj_packet| 0))& (0+255)
  1422  023A  120A  118A  2057  120A  118A  	fcall	_sprintf
  1423  023F                     l2425:
  1424                           
  1425                           ;main.c: 287:             cuenta=0;
  1426  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1427  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1428  0241  01D0               	clrf	_cuenta
  1429  0242                     l2427:
  1430                           
  1431                           ;main.c: 288:             flag_rx=0;
  1432  0242  01CF               	clrf	_flag_rx
  1433  0243                     l2429:
  1434                           
  1435                           ;main.c: 289:             PIR1bits.RCIF=0;
  1436  0243  128C               	bcf	12,5	;volatile
  1437  0244                     l2431:
  1438                           
  1439                           ;main.c: 291:             CREN = 1;
  1440  0244  1618               	bsf	24,4	;volatile
  1441  0245                     l2433:
  1442                           
  1443                           ;main.c: 292:             INTCONbits.GIE=1;
  1444  0245  178B               	bsf	11,7	;volatile
  1445                           
  1446                           ;main.c: 293:             USART_SendText(msj_packet);
  1447  0246  30A0               	movlw	(low (_msj_packet| 0))& (0+255)
  1448  0247  00A1               	movwf	USART_SendText@cadena
  1449  0248  3000               	movlw	0
  1450  0249  00A2               	movwf	USART_SendText@cadena+1
  1451  024A  120A  118A  25C6  120A  118A  	fcall	_USART_SendText
  1452  024F                     l2435:
  1453                           
  1454                           ;main.c: 294:             Color_Start();
  1455  024F  120A  118A  2756  120A  118A  	fcall	_Color_Start
  1456  0254  2A1F               	goto	l2421
  1457  0255  120A  118A  2812   	ljmp	start
  1458  0258                     __end_of_main:
  1459                           
  1460                           	psect	text1
  1461  0057                     __ptext1:	
  1462 ;; *************** function _sprintf *****************
  1463 ;; Defined at:
  1464 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  sp              1    wreg     PTR unsigned char 
  1467 ;;		 -> msj_packet(35), 
  1468 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1469 ;;		 -> STR_3(26), STR_1(43), 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  sp              1   33[BANK0 ] PTR unsigned char 
  1472 ;;		 -> msj_packet(35), 
  1473 ;;  tmpval          4    0        struct .
  1474 ;;  val             2   30[BANK0 ] unsigned int 
  1475 ;;  cp              2    0        PTR const unsigned char 
  1476 ;;  len             2    0        unsigned int 
  1477 ;;  c               1   34[BANK0 ] unsigned char 
  1478 ;;  prec            1   32[BANK0 ] char 
  1479 ;;  ap              1   29[BANK0 ] PTR void [1]
  1480 ;;		 -> ?_sprintf(2), 
  1481 ;;  flag            1   28[BANK0 ] unsigned char 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  2   12[BANK0 ] int 
  1484 ;; Registers used:
  1485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1491 ;;      Params:         0      13       0       0       0
  1492 ;;      Locals:         0       7       0       0       0
  1493 ;;      Temps:          0       3       0       0       0
  1494 ;;      Totals:         0      23       0       0       0
  1495 ;;Total ram usage:       23 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    2
  1498 ;; This function calls:
  1499 ;;		___lwdiv
  1500 ;;		___lwmod
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;;		_CNF_Print
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _sprintf
  1509  0057                     _sprintf:
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1513                           ;sprintf@sp stored from wreg
  1514  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0059  00C1               	movwf	sprintf@sp
  1517  005A                     l2255:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1520  005A  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1521  005B  00FF               	movwf	btemp+1
  1522  005C  087F               	movf	btemp+1,w
  1523  005D  00BD               	movwf	sprintf@ap
  1524                           
  1525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1526  005E  290F               	goto	l2299
  1527  005F                     l2257:
  1528                           
  1529                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1530  005F  3025               	movlw	37
  1531  0060  0642               	xorwf	sprintf@c,w
  1532  0061  1903               	btfsc	3,2
  1533  0062  2864               	goto	u1881
  1534  0063  2865               	goto	u1880
  1535  0064                     u1881:
  1536  0064  2871               	goto	l2263
  1537  0065                     u1880:
  1538  0065                     l2259:
  1539                           
  1540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1541  0065  0842               	movf	sprintf@c,w
  1542  0066  00FF               	movwf	btemp+1
  1543  0067  0841               	movf	sprintf@sp,w
  1544  0068  0084               	movwf	4
  1545  0069  087F               	movf	btemp+1,w
  1546  006A  1383               	bcf	3,7	;select IRP bank0
  1547  006B  0080               	movwf	0
  1548  006C                     l2261:
  1549  006C  3001               	movlw	1
  1550  006D  00FF               	movwf	btemp+1
  1551  006E  087F               	movf	btemp+1,w
  1552  006F  07C1               	addwf	sprintf@sp,f
  1553                           
  1554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 559:    continue;
  1555  0070  290F               	goto	l2299
  1556  0071                     l2263:
  1557                           
  1558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1559  0071  01BC               	clrf	sprintf@flag
  1560                           
  1561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1562  0072  2878               	goto	l2269
  1563  0073                     l2265:
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1566  0073  30C0               	movlw	192
  1567  0074  00FF               	movwf	btemp+1
  1568  0075  087F               	movf	btemp+1,w
  1569  0076  04BC               	iorwf	sprintf@flag,f
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 845:    break;
  1572  0077  2892               	goto	l2271
  1573  0078                     l2269:
  1574  0078  3001               	movlw	1
  1575  0079  07AC               	addwf	sprintf@f,f
  1576  007A  30FF               	movlw	-1
  1577  007B  072C               	addwf	sprintf@f,w
  1578  007C  0084               	movwf	4
  1579  007D  120A  118A  2340  120A  118A  	fcall	stringdir
  1580  0082  00C2               	movwf	sprintf@c
  1581  0083  00B9               	movwf	??_sprintf
  1582  0084  01BA               	clrf	??_sprintf+1
  1583                           
  1584                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1585                           ; Switch size 1, requested type "simple"
  1586                           ; Number of cases is 1, Range of values is 0 to 0
  1587                           ; switch strategies available:
  1588                           ; Name         Instructions Cycles
  1589                           ; simple_byte            4     3 (average)
  1590                           ; direct_byte           11     8 (fixed)
  1591                           ; jumptable            260     6 (fixed)
  1592                           ;	Chosen strategy is simple_byte
  1593  0085  083A               	movf	??_sprintf+1,w
  1594  0086  3A00               	xorlw	0	; case 0
  1595  0087  1903               	skipnz
  1596  0088  288A               	goto	l2457
  1597  0089  290F               	goto	l2299
  1598  008A                     l2457:
  1599                           
  1600                           ; Switch size 1, requested type "simple"
  1601                           ; Number of cases is 2, Range of values is 0 to 117
  1602                           ; switch strategies available:
  1603                           ; Name         Instructions Cycles
  1604                           ; simple_byte            7     4 (average)
  1605                           ; jumptable            260     6 (fixed)
  1606                           ;	Chosen strategy is simple_byte
  1607  008A  0839               	movf	??_sprintf,w
  1608  008B  3A00               	xorlw	0	; case 0
  1609  008C  1903               	skipnz
  1610  008D  2921               	goto	l2301
  1611  008E  3A75               	xorlw	117	; case 117
  1612  008F  1903               	skipnz
  1613  0090  2873               	goto	l2265
  1614  0091  290F               	goto	l2299
  1615  0092                     l2271:
  1616                           
  1617                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1618  0092  083D               	movf	sprintf@ap,w
  1619  0093  0084               	movwf	4
  1620  0094  1383               	bcf	3,7	;select IRP bank0
  1621  0095  0800               	movf	0,w
  1622  0096  00BE               	movwf	sprintf@val
  1623  0097  0A84               	incf	4,f
  1624  0098  0800               	movf	0,w
  1625  0099  00BF               	movwf	sprintf@val+1
  1626  009A                     l2273:
  1627  009A  3002               	movlw	2
  1628  009B  00FF               	movwf	btemp+1
  1629  009C  087F               	movf	btemp+1,w
  1630  009D  07BD               	addwf	sprintf@ap,f
  1631  009E                     l2275:
  1632                           
  1633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1634  009E  01C2               	clrf	sprintf@c
  1635  009F  0AC2               	incf	sprintf@c,f
  1636  00A0                     l2281:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1639  00A0  0842               	movf	sprintf@c,w
  1640  00A1  00B9               	movwf	??_sprintf
  1641  00A2  0739               	addwf	??_sprintf,w
  1642  00A3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1643  00A4  0084               	movwf	4
  1644  00A5  120A  118A  2340  120A  118A  	fcall	stringdir
  1645  00AA  00BA               	movwf	??_sprintf+1
  1646  00AB  120A  118A  2340  120A  118A  	fcall	stringdir
  1647  00B0  00BB               	movwf	??_sprintf+2
  1648  00B1  083B               	movf	??_sprintf+2,w
  1649  00B2  023F               	subwf	sprintf@val+1,w
  1650  00B3  1D03               	skipz
  1651  00B4  28B7               	goto	u1895
  1652  00B5  083A               	movf	??_sprintf+1,w
  1653  00B6  023E               	subwf	sprintf@val,w
  1654  00B7                     u1895:
  1655  00B7  1803               	skipnc
  1656  00B8  28BA               	goto	u1891
  1657  00B9  28BB               	goto	u1890
  1658  00BA                     u1891:
  1659  00BA  28BC               	goto	l2285
  1660  00BB                     u1890:
  1661  00BB  28C6               	goto	l2289
  1662  00BC                     l2285:
  1663  00BC  3001               	movlw	1
  1664  00BD  00FF               	movwf	btemp+1
  1665  00BE  087F               	movf	btemp+1,w
  1666  00BF  07C2               	addwf	sprintf@c,f
  1667  00C0                     l2287:
  1668  00C0  3005               	movlw	5
  1669  00C1  0642               	xorwf	sprintf@c,w
  1670  00C2  1D03               	btfss	3,2
  1671  00C3  28C5               	goto	u1901
  1672  00C4  28C6               	goto	u1900
  1673  00C5                     u1901:
  1674  00C5  28A0               	goto	l2281
  1675  00C6                     u1900:
  1676  00C6                     l2289:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1679  00C6  0842               	movf	sprintf@c,w
  1680  00C7  00FF               	movwf	btemp+1
  1681  00C8  087F               	movf	btemp+1,w
  1682  00C9  00C0               	movwf	sprintf@prec
  1683                           
  1684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1685  00CA  2906               	goto	l2297
  1686  00CB                     l2291:
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1689  00CB  300A               	movlw	10
  1690  00CC  00A7               	movwf	___lwmod@divisor
  1691  00CD  3000               	movlw	0
  1692  00CE  00A8               	movwf	___lwmod@divisor+1
  1693  00CF  0840               	movf	sprintf@prec,w
  1694  00D0  00B9               	movwf	??_sprintf
  1695  00D1  0739               	addwf	??_sprintf,w
  1696  00D2  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1697  00D3  0084               	movwf	4
  1698  00D4  120A  118A  2340  120A  118A  	fcall	stringdir
  1699  00D9  00A0               	movwf	___lwdiv@divisor
  1700  00DA  120A  118A  2340  120A  118A  	fcall	stringdir
  1701  00DF  00A1               	movwf	___lwdiv@divisor+1
  1702  00E0  083F               	movf	sprintf@val+1,w
  1703  00E1  00A3               	movwf	___lwdiv@dividend+1
  1704  00E2  083E               	movf	sprintf@val,w
  1705  00E3  00A2               	movwf	___lwdiv@dividend
  1706  00E4  120A  118A  250A  120A  118A  	fcall	___lwdiv
  1707  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  1708  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  1709  00EB  0821               	movf	?___lwdiv+1,w
  1710  00EC  00AA               	movwf	___lwmod@dividend+1
  1711  00ED  0820               	movf	?___lwdiv,w
  1712  00EE  00A9               	movwf	___lwmod@dividend
  1713  00EF  120A  118A  2550  120A  118A  	fcall	___lwmod
  1714  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1715  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1716  00F6  0827               	movf	?___lwmod,w
  1717  00F7  3E30               	addlw	48
  1718  00F8  00FF               	movwf	btemp+1
  1719  00F9  087F               	movf	btemp+1,w
  1720  00FA  00C2               	movwf	sprintf@c
  1721  00FB                     l2293:
  1722                           
  1723                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1724  00FB  0842               	movf	sprintf@c,w
  1725  00FC  00FF               	movwf	btemp+1
  1726  00FD  0841               	movf	sprintf@sp,w
  1727  00FE  0084               	movwf	4
  1728  00FF  087F               	movf	btemp+1,w
  1729  0100  1383               	bcf	3,7	;select IRP bank0
  1730  0101  0080               	movwf	0
  1731  0102                     l2295:
  1732  0102  3001               	movlw	1
  1733  0103  00FF               	movwf	btemp+1
  1734  0104  087F               	movf	btemp+1,w
  1735  0105  07C1               	addwf	sprintf@sp,f
  1736  0106                     l2297:
  1737                           
  1738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1739  0106  30FF               	movlw	255
  1740  0107  00FF               	movwf	btemp+1
  1741  0108  087F               	movf	btemp+1,w
  1742  0109  07C0               	addwf	sprintf@prec,f
  1743  010A  0A40               	incf	sprintf@prec,w
  1744  010B  1D03               	btfss	3,2
  1745  010C  290E               	goto	u1911
  1746  010D  290F               	goto	u1910
  1747  010E                     u1911:
  1748  010E  28CB               	goto	l2291
  1749  010F                     u1910:
  1750  010F                     l2299:
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1753  010F  3001               	movlw	1
  1754  0110  07AC               	addwf	sprintf@f,f
  1755  0111  30FF               	movlw	-1
  1756  0112  072C               	addwf	sprintf@f,w
  1757  0113  0084               	movwf	4
  1758  0114  120A  118A  2340  120A  118A  	fcall	stringdir
  1759  0119  00FF               	movwf	btemp+1
  1760  011A  087F               	movf	btemp+1,w
  1761  011B  00C2               	movwf	sprintf@c
  1762  011C  0842               	movf	sprintf@c,w
  1763  011D  1D03               	btfss	3,2
  1764  011E  2920               	goto	u1921
  1765  011F  2921               	goto	u1920
  1766  0120                     u1921:
  1767  0120  285F               	goto	l2257
  1768  0121                     u1920:
  1769  0121                     l2301:
  1770                           
  1771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1772  0121  0841               	movf	sprintf@sp,w
  1773  0122  0084               	movwf	4
  1774  0123  1383               	bcf	3,7	;select IRP bank0
  1775  0124  0180               	clrf	0
  1776  0125                     l411:
  1777  0125  0008               	return
  1778  0126                     __end_of_sprintf:
  1779                           
  1780                           	psect	text2
  1781  0550                     __ptext2:	
  1782 ;; *************** function ___lwmod *****************
  1783 ;; Defined at:
  1784 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  divisor         2    7[BANK0 ] unsigned int 
  1787 ;;  dividend        2    9[BANK0 ] unsigned int 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  counter         1   11[BANK0 ] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  2    7[BANK0 ] unsigned int 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0, btemp+1
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       4       0       0       0
  1800 ;;      Locals:         0       1       0       0       0
  1801 ;;      Temps:          0       0       0       0       0
  1802 ;;      Totals:         0       5       0       0       0
  1803 ;;Total ram usage:        5 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    1
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_sprintf
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function ___lwmod
  1815  0550                     ___lwmod:
  1816  0550                     l2225:	
  1817                           ;incstack = 0
  1818                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1819                           
  1820  0550  1283               	bcf	3,5	;RP0=0, select bank0
  1821  0551  1303               	bcf	3,6	;RP1=0, select bank0
  1822  0552  0827               	movf	___lwmod@divisor,w
  1823  0553  0428               	iorwf	___lwmod@divisor+1,w
  1824  0554  1903               	btfsc	3,2
  1825  0555  2D57               	goto	u1821
  1826  0556  2D58               	goto	u1820
  1827  0557                     u1821:
  1828  0557  2D87               	goto	l2243
  1829  0558                     u1820:
  1830  0558                     l2227:
  1831  0558  01AB               	clrf	___lwmod@counter
  1832  0559  0AAB               	incf	___lwmod@counter,f
  1833  055A  2D66               	goto	l2233
  1834  055B                     l2229:
  1835  055B  3001               	movlw	1
  1836  055C                     u1835:
  1837  055C  1003               	clrc
  1838  055D  0DA7               	rlf	___lwmod@divisor,f
  1839  055E  0DA8               	rlf	___lwmod@divisor+1,f
  1840  055F  3EFF               	addlw	-1
  1841  0560  1D03               	skipz
  1842  0561  2D5C               	goto	u1835
  1843  0562                     l2231:
  1844  0562  3001               	movlw	1
  1845  0563  00FF               	movwf	btemp+1
  1846  0564  087F               	movf	btemp+1,w
  1847  0565  07AB               	addwf	___lwmod@counter,f
  1848  0566                     l2233:
  1849  0566  1FA8               	btfss	___lwmod@divisor+1,7
  1850  0567  2D69               	goto	u1841
  1851  0568  2D6A               	goto	u1840
  1852  0569                     u1841:
  1853  0569  2D5B               	goto	l2229
  1854  056A                     u1840:
  1855  056A                     l2235:
  1856  056A  0828               	movf	___lwmod@divisor+1,w
  1857  056B  022A               	subwf	___lwmod@dividend+1,w
  1858  056C  1D03               	skipz
  1859  056D  2D70               	goto	u1855
  1860  056E  0827               	movf	___lwmod@divisor,w
  1861  056F  0229               	subwf	___lwmod@dividend,w
  1862  0570                     u1855:
  1863  0570  1C03               	skipc
  1864  0571  2D73               	goto	u1851
  1865  0572  2D74               	goto	u1850
  1866  0573                     u1851:
  1867  0573  2D7A               	goto	l2239
  1868  0574                     u1850:
  1869  0574                     l2237:
  1870  0574  0827               	movf	___lwmod@divisor,w
  1871  0575  02A9               	subwf	___lwmod@dividend,f
  1872  0576  0828               	movf	___lwmod@divisor+1,w
  1873  0577  1C03               	skipc
  1874  0578  03AA               	decf	___lwmod@dividend+1,f
  1875  0579  02AA               	subwf	___lwmod@dividend+1,f
  1876  057A                     l2239:
  1877  057A  3001               	movlw	1
  1878  057B                     u1865:
  1879  057B  1003               	clrc
  1880  057C  0CA8               	rrf	___lwmod@divisor+1,f
  1881  057D  0CA7               	rrf	___lwmod@divisor,f
  1882  057E  3EFF               	addlw	-1
  1883  057F  1D03               	skipz
  1884  0580  2D7B               	goto	u1865
  1885  0581                     l2241:
  1886  0581  3001               	movlw	1
  1887  0582  02AB               	subwf	___lwmod@counter,f
  1888  0583  1D03               	btfss	3,2
  1889  0584  2D86               	goto	u1871
  1890  0585  2D87               	goto	u1870
  1891  0586                     u1871:
  1892  0586  2D6A               	goto	l2235
  1893  0587                     u1870:
  1894  0587                     l2243:
  1895  0587  082A               	movf	___lwmod@dividend+1,w
  1896  0588  00A8               	movwf	?___lwmod+1
  1897  0589  0829               	movf	___lwmod@dividend,w
  1898  058A  00A7               	movwf	?___lwmod
  1899  058B                     l697:
  1900  058B  0008               	return
  1901  058C                     __end_of___lwmod:
  1902                           
  1903                           	psect	text3
  1904  050A                     __ptext3:	
  1905 ;; *************** function ___lwdiv *****************
  1906 ;; Defined at:
  1907 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  divisor         2    0[BANK0 ] unsigned int 
  1910 ;;  dividend        2    2[BANK0 ] unsigned int 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  quotient        2    5[BANK0 ] unsigned int 
  1913 ;;  counter         1    4[BANK0 ] unsigned char 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  2    0[BANK0 ] unsigned int 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0, btemp+1
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1923 ;;      Params:         0       4       0       0       0
  1924 ;;      Locals:         0       3       0       0       0
  1925 ;;      Temps:          0       0       0       0       0
  1926 ;;      Totals:         0       7       0       0       0
  1927 ;;Total ram usage:        7 bytes
  1928 ;; Hardware stack levels used:    1
  1929 ;; Hardware stack levels required when called:    1
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_sprintf
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function ___lwdiv
  1939  050A                     ___lwdiv:
  1940  050A                     l2199:	
  1941                           ;incstack = 0
  1942                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1943                           
  1944  050A  1283               	bcf	3,5	;RP0=0, select bank0
  1945  050B  1303               	bcf	3,6	;RP1=0, select bank0
  1946  050C  01A5               	clrf	___lwdiv@quotient
  1947  050D  01A6               	clrf	___lwdiv@quotient+1
  1948  050E                     l2201:
  1949  050E  0820               	movf	___lwdiv@divisor,w
  1950  050F  0421               	iorwf	___lwdiv@divisor+1,w
  1951  0510  1903               	btfsc	3,2
  1952  0511  2D13               	goto	u1751
  1953  0512  2D14               	goto	u1750
  1954  0513                     u1751:
  1955  0513  2D4B               	goto	l2221
  1956  0514                     u1750:
  1957  0514                     l2203:
  1958  0514  01A4               	clrf	___lwdiv@counter
  1959  0515  0AA4               	incf	___lwdiv@counter,f
  1960  0516  2D22               	goto	l2209
  1961  0517                     l2205:
  1962  0517  3001               	movlw	1
  1963  0518                     u1765:
  1964  0518  1003               	clrc
  1965  0519  0DA0               	rlf	___lwdiv@divisor,f
  1966  051A  0DA1               	rlf	___lwdiv@divisor+1,f
  1967  051B  3EFF               	addlw	-1
  1968  051C  1D03               	skipz
  1969  051D  2D18               	goto	u1765
  1970  051E                     l2207:
  1971  051E  3001               	movlw	1
  1972  051F  00FF               	movwf	btemp+1
  1973  0520  087F               	movf	btemp+1,w
  1974  0521  07A4               	addwf	___lwdiv@counter,f
  1975  0522                     l2209:
  1976  0522  1FA1               	btfss	___lwdiv@divisor+1,7
  1977  0523  2D25               	goto	u1771
  1978  0524  2D26               	goto	u1770
  1979  0525                     u1771:
  1980  0525  2D17               	goto	l2205
  1981  0526                     u1770:
  1982  0526                     l2211:
  1983  0526  3001               	movlw	1
  1984  0527                     u1785:
  1985  0527  1003               	clrc
  1986  0528  0DA5               	rlf	___lwdiv@quotient,f
  1987  0529  0DA6               	rlf	___lwdiv@quotient+1,f
  1988  052A  3EFF               	addlw	-1
  1989  052B  1D03               	skipz
  1990  052C  2D27               	goto	u1785
  1991  052D  0821               	movf	___lwdiv@divisor+1,w
  1992  052E  0223               	subwf	___lwdiv@dividend+1,w
  1993  052F  1D03               	skipz
  1994  0530  2D33               	goto	u1795
  1995  0531  0820               	movf	___lwdiv@divisor,w
  1996  0532  0222               	subwf	___lwdiv@dividend,w
  1997  0533                     u1795:
  1998  0533  1C03               	skipc
  1999  0534  2D36               	goto	u1791
  2000  0535  2D37               	goto	u1790
  2001  0536                     u1791:
  2002  0536  2D3E               	goto	l2217
  2003  0537                     u1790:
  2004  0537                     l2213:
  2005  0537  0820               	movf	___lwdiv@divisor,w
  2006  0538  02A2               	subwf	___lwdiv@dividend,f
  2007  0539  0821               	movf	___lwdiv@divisor+1,w
  2008  053A  1C03               	skipc
  2009  053B  03A3               	decf	___lwdiv@dividend+1,f
  2010  053C  02A3               	subwf	___lwdiv@dividend+1,f
  2011  053D                     l2215:
  2012  053D  1425               	bsf	___lwdiv@quotient,0
  2013  053E                     l2217:
  2014  053E  3001               	movlw	1
  2015  053F                     u1805:
  2016  053F  1003               	clrc
  2017  0540  0CA1               	rrf	___lwdiv@divisor+1,f
  2018  0541  0CA0               	rrf	___lwdiv@divisor,f
  2019  0542  3EFF               	addlw	-1
  2020  0543  1D03               	skipz
  2021  0544  2D3F               	goto	u1805
  2022  0545                     l2219:
  2023  0545  3001               	movlw	1
  2024  0546  02A4               	subwf	___lwdiv@counter,f
  2025  0547  1D03               	btfss	3,2
  2026  0548  2D4A               	goto	u1811
  2027  0549  2D4B               	goto	u1810
  2028  054A                     u1811:
  2029  054A  2D26               	goto	l2211
  2030  054B                     u1810:
  2031  054B                     l2221:
  2032  054B  0826               	movf	___lwdiv@quotient+1,w
  2033  054C  00A1               	movwf	?___lwdiv+1
  2034  054D  0825               	movf	___lwdiv@quotient,w
  2035  054E  00A0               	movwf	?___lwdiv
  2036  054F                     l687:
  2037  054F  0008               	return
  2038  0550                     __end_of___lwdiv:
  2039                           
  2040                           	psect	text4
  2041  065B                     __ptext4:	
  2042 ;; *************** function _memset *****************
  2043 ;; Defined at:
  2044 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\memset.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  p1              1    wreg     PTR void 
  2047 ;;		 -> msj_packet(35), 
  2048 ;;  c               2    0[BANK0 ] int 
  2049 ;;  n               2    2[BANK0 ] unsigned int 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  p1              1    5[BANK0 ] PTR void 
  2052 ;;		 -> msj_packet(35), 
  2053 ;;  p               1    4[BANK0 ] PTR unsigned char 
  2054 ;;		 -> msj_packet(35), 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      PTR void 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2064 ;;      Params:         0       4       0       0       0
  2065 ;;      Locals:         0       2       0       0       0
  2066 ;;      Temps:          0       0       0       0       0
  2067 ;;      Totals:         0       6       0       0       0
  2068 ;;Total ram usage:        6 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    1
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           
  2079                           ;psect for function _memset
  2080  065B                     _memset:
  2081                           
  2082                           ;incstack = 0
  2083                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0+btemp+1]
  2084                           ;memset@p1 stored from wreg
  2085  065B  1283               	bcf	3,5	;RP0=0, select bank0
  2086  065C  1303               	bcf	3,6	;RP1=0, select bank0
  2087  065D  00A5               	movwf	memset@p1
  2088  065E                     l2363:
  2089  065E  0825               	movf	memset@p1,w
  2090  065F  00FF               	movwf	btemp+1
  2091  0660  087F               	movf	btemp+1,w
  2092  0661  00A4               	movwf	memset@p
  2093  0662  2E6E               	goto	l2369
  2094  0663                     l2365:
  2095  0663  0820               	movf	memset@c,w
  2096  0664  00FF               	movwf	btemp+1
  2097  0665  0824               	movf	memset@p,w
  2098  0666  0084               	movwf	4
  2099  0667  087F               	movf	btemp+1,w
  2100  0668  1383               	bcf	3,7	;select IRP bank0
  2101  0669  0080               	movwf	0
  2102  066A                     l2367:
  2103  066A  3001               	movlw	1
  2104  066B  00FF               	movwf	btemp+1
  2105  066C  087F               	movf	btemp+1,w
  2106  066D  07A4               	addwf	memset@p,f
  2107  066E                     l2369:
  2108  066E  3001               	movlw	1
  2109  066F  02A2               	subwf	memset@n,f
  2110  0670  3000               	movlw	0
  2111  0671  1C03               	skipc
  2112  0672  03A3               	decf	memset@n+1,f
  2113  0673  02A3               	subwf	memset@n+1,f
  2114  0674  0A22               	incf	memset@n,w
  2115  0675  1D03               	skipz
  2116  0676  2E7B               	goto	u1971
  2117  0677  0A23               	incf	memset@n+1,w
  2118  0678  1D03               	btfss	3,2
  2119  0679  2E7B               	goto	u1971
  2120  067A  2E7C               	goto	u1970
  2121  067B                     u1971:
  2122  067B  2E63               	goto	l2365
  2123  067C                     u1970:
  2124  067C                     l869:
  2125  067C  0008               	return
  2126  067D                     __end_of_memset:
  2127                           
  2128                           	psect	text5
  2129  05C6                     __ptext5:	
  2130 ;; *************** function _USART_SendText *****************
  2131 ;; Defined at:
  2132 ;;		line 64 in file "usartlib.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;  cadena          2    1[BANK0 ] PTR unsigned char 
  2135 ;;		 -> STR_2(10), msj_cnf_param(35), msj_packet(35), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;		None
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2147 ;;      Params:         0       2       0       0       0
  2148 ;;      Locals:         0       0       0       0       0
  2149 ;;      Temps:          0       0       0       0       0
  2150 ;;      Totals:         0       2       0       0       0
  2151 ;;Total ram usage:        2 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    2
  2154 ;; This function calls:
  2155 ;;		_USART_SendChar
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;;		_CNF_Print
  2159 ;;		_CNF_Params
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           
  2164                           ;psect for function _USART_SendText
  2165  05C6                     _USART_SendText:
  2166  05C6                     l2309:	
  2167                           ;incstack = 0
  2168                           ; Regs used in _USART_SendText: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2169                           
  2170                           
  2171                           ;usartlib.c: 65:     while(*cadena != '\0'){
  2172  05C6  2DDD               	goto	l2315
  2173  05C7                     l2311:
  2174                           
  2175                           ;usartlib.c: 67:         USART_SendChar(*cadena);
  2176  05C7  0822               	movf	USART_SendText@cadena+1,w
  2177  05C8  00FF               	movwf	btemp+1
  2178  05C9  0821               	movf	USART_SendText@cadena,w
  2179  05CA  0084               	movwf	4
  2180  05CB  120A  118A  2336  120A  118A  	fcall	stringtab
  2181  05D0  120A  118A  274A  120A  118A  	fcall	_USART_SendChar
  2182  05D5                     l2313:
  2183                           
  2184                           ;usartlib.c: 68:         cadena++;
  2185  05D5  3001               	movlw	1
  2186  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  2187  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  2188  05D8  07A1               	addwf	USART_SendText@cadena,f
  2189  05D9  1803               	skipnc
  2190  05DA  0AA2               	incf	USART_SendText@cadena+1,f
  2191  05DB  3000               	movlw	0
  2192  05DC  07A2               	addwf	USART_SendText@cadena+1,f
  2193  05DD                     l2315:
  2194                           
  2195                           ;usartlib.c: 65:     while(*cadena != '\0'){
  2196  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  2197  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  2198  05DF  0822               	movf	USART_SendText@cadena+1,w
  2199  05E0  00FF               	movwf	btemp+1
  2200  05E1  0821               	movf	USART_SendText@cadena,w
  2201  05E2  0084               	movwf	4
  2202  05E3  120A  118A  2336  120A  118A  	fcall	stringtab
  2203  05E8  3A00               	xorlw	0
  2204  05E9  1D03               	skipz
  2205  05EA  2DEC               	goto	u1931
  2206  05EB  2DED               	goto	u1930
  2207  05EC                     u1931:
  2208  05EC  2DC7               	goto	l2311
  2209  05ED                     u1930:
  2210  05ED                     l240:
  2211  05ED  0008               	return
  2212  05EE                     __end_of_USART_SendText:
  2213                           
  2214                           	psect	text6
  2215  074A                     __ptext6:	
  2216 ;; *************** function _USART_SendChar *****************
  2217 ;; Defined at:
  2218 ;;		line 55 in file "usartlib.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  caracter        1    wreg     unsigned char 
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;  caracter        1    0[BANK0 ] unsigned char 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2232 ;;      Params:         0       0       0       0       0
  2233 ;;      Locals:         0       1       0       0       0
  2234 ;;      Temps:          0       0       0       0       0
  2235 ;;      Totals:         0       1       0       0       0
  2236 ;;Total ram usage:        1 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    1
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_USART_SendText
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           
  2247                           ;psect for function _USART_SendChar
  2248  074A                     _USART_SendChar:
  2249                           
  2250                           ;incstack = 0
  2251                           ; Regs used in _USART_SendChar: [wreg]
  2252                           ;USART_SendChar@caracter stored from wreg
  2253  074A  1283               	bcf	3,5	;RP0=0, select bank0
  2254  074B  1303               	bcf	3,6	;RP1=0, select bank0
  2255  074C  00A0               	movwf	USART_SendChar@caracter
  2256  074D                     l2155:
  2257                           
  2258                           ;usartlib.c: 56:     TXREG = caracter;
  2259  074D  0820               	movf	USART_SendChar@caracter,w
  2260  074E  0099               	movwf	25	;volatile
  2261  074F                     l231:	
  2262                           ;usartlib.c: 57:     while(TRMT == 0);
  2263                           
  2264  074F  1683               	bsf	3,5	;RP0=1, select bank1
  2265  0750  1303               	bcf	3,6	;RP1=0, select bank1
  2266  0751  1C98               	btfss	24,1	;volatile
  2267  0752  2F54               	goto	u1641
  2268  0753  2F55               	goto	u1640
  2269  0754                     u1641:
  2270  0754  2F4F               	goto	l231
  2271  0755                     u1640:
  2272  0755                     l234:
  2273  0755  0008               	return
  2274  0756                     __end_of_USART_SendChar:
  2275                           
  2276                           	psect	text7
  2277  0258                     __ptext7:	
  2278 ;; *************** function _USART_Init *****************
  2279 ;; Defined at:
  2280 ;;		line 10 in file "usartlib.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  XTAL            4   15[BANK0 ] const long 
  2283 ;;  baudrate        4   19[BANK0 ] long 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         0       8       0       0       0
  2296 ;;      Locals:         0       0       0       0       0
  2297 ;;      Temps:          0      12       0       0       0
  2298 ;;      Totals:         0      20       0       0       0
  2299 ;;Total ram usage:       20 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    2
  2302 ;; This function calls:
  2303 ;;		___aldiv
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           
  2310                           ;psect for function _USART_Init
  2311  0258                     _USART_Init:
  2312  0258                     l2347:	
  2313                           ;incstack = 0
  2314                           ; Regs used in _USART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2315                           
  2316                           
  2317                           ;usartlib.c: 11:     BAUDIOS = (XTAL - baudrate*16)/(baudrate*16);
  2318  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2320  025A  0833               	movf	USART_Init@baudrate,w
  2321  025B  00B7               	movwf	??_USART_Init
  2322  025C  0834               	movf	USART_Init@baudrate+1,w
  2323  025D  00B8               	movwf	??_USART_Init+1
  2324  025E  0835               	movf	USART_Init@baudrate+2,w
  2325  025F  00B9               	movwf	??_USART_Init+2
  2326  0260  0836               	movf	USART_Init@baudrate+3,w
  2327  0261  00BA               	movwf	??_USART_Init+3
  2328  0262  3004               	movlw	4
  2329  0263                     u1945:
  2330  0263  1003               	clrc
  2331  0264  0DB7               	rlf	??_USART_Init,f
  2332  0265  0DB8               	rlf	??_USART_Init+1,f
  2333  0266  0DB9               	rlf	??_USART_Init+2,f
  2334  0267  0DBA               	rlf	??_USART_Init+3,f
  2335  0268                     u1940:
  2336  0268  3EFF               	addlw	-1
  2337  0269  1D03               	skipz
  2338  026A  2A63               	goto	u1945
  2339  026B  083A               	movf	??_USART_Init+3,w
  2340  026C  00A3               	movwf	___aldiv@divisor+3
  2341  026D  0839               	movf	??_USART_Init+2,w
  2342  026E  00A2               	movwf	___aldiv@divisor+2
  2343  026F  0838               	movf	??_USART_Init+1,w
  2344  0270  00A1               	movwf	___aldiv@divisor+1
  2345  0271  0837               	movf	??_USART_Init,w
  2346  0272  00A0               	movwf	___aldiv@divisor
  2347  0273  0833               	movf	USART_Init@baudrate,w
  2348  0274  00BB               	movwf	??_USART_Init+4
  2349  0275  0834               	movf	USART_Init@baudrate+1,w
  2350  0276  00BC               	movwf	??_USART_Init+5
  2351  0277  0835               	movf	USART_Init@baudrate+2,w
  2352  0278  00BD               	movwf	??_USART_Init+6
  2353  0279  0836               	movf	USART_Init@baudrate+3,w
  2354  027A  00BE               	movwf	??_USART_Init+7
  2355  027B  3004               	movlw	4
  2356  027C                     u1955:
  2357  027C  1003               	clrc
  2358  027D  0DBB               	rlf	??_USART_Init+4,f
  2359  027E  0DBC               	rlf	??_USART_Init+5,f
  2360  027F  0DBD               	rlf	??_USART_Init+6,f
  2361  0280  0DBE               	rlf	??_USART_Init+7,f
  2362  0281                     u1950:
  2363  0281  3EFF               	addlw	-1
  2364  0282  1D03               	skipz
  2365  0283  2A7C               	goto	u1955
  2366  0284  082F               	movf	USART_Init@XTAL,w
  2367  0285  00BF               	movwf	??_USART_Init+8
  2368  0286  0830               	movf	USART_Init@XTAL+1,w
  2369  0287  00C0               	movwf	??_USART_Init+9
  2370  0288  0831               	movf	USART_Init@XTAL+2,w
  2371  0289  00C1               	movwf	??_USART_Init+10
  2372  028A  0832               	movf	USART_Init@XTAL+3,w
  2373  028B  00C2               	movwf	??_USART_Init+11
  2374  028C  083B               	movf	??_USART_Init+4,w
  2375  028D  02BF               	subwf	??_USART_Init+8,f
  2376  028E  083C               	movf	??_USART_Init+5,w
  2377  028F  1C03               	skipc
  2378  0290  0F3C               	incfsz	??_USART_Init+5,w
  2379  0291  2A93               	goto	u1961
  2380  0292  2A94               	goto	u1962
  2381  0293                     u1961:
  2382  0293  02C0               	subwf	??_USART_Init+9,f
  2383  0294                     u1962:
  2384  0294  083D               	movf	??_USART_Init+6,w
  2385  0295  1C03               	skipc
  2386  0296  0F3D               	incfsz	??_USART_Init+6,w
  2387  0297  2A99               	goto	u1963
  2388  0298  2A9A               	goto	u1964
  2389  0299                     u1963:
  2390  0299  02C1               	subwf	??_USART_Init+10,f
  2391  029A                     u1964:
  2392  029A  083E               	movf	??_USART_Init+7,w
  2393  029B  1C03               	skipc
  2394  029C  0F3E               	incfsz	??_USART_Init+7,w
  2395  029D  2A9F               	goto	u1965
  2396  029E  2AA0               	goto	u1966
  2397  029F                     u1965:
  2398  029F  02C2               	subwf	??_USART_Init+11,f
  2399  02A0                     u1966:
  2400  02A0  0842               	movf	??_USART_Init+11,w
  2401  02A1  00A7               	movwf	___aldiv@dividend+3
  2402  02A2  0841               	movf	??_USART_Init+10,w
  2403  02A3  00A6               	movwf	___aldiv@dividend+2
  2404  02A4  0840               	movf	??_USART_Init+9,w
  2405  02A5  00A5               	movwf	___aldiv@dividend+1
  2406  02A6  083F               	movf	??_USART_Init+8,w
  2407  02A7  00A4               	movwf	___aldiv@dividend
  2408  02A8  120A  118A  2126  120A  118A  	fcall	___aldiv
  2409  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  2410  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  2411  02AF  0821               	movf	?___aldiv+1,w
  2412  02B0  00E6               	movwf	_BAUDIOS+1
  2413  02B1  0820               	movf	?___aldiv,w
  2414  02B2  00E5               	movwf	_BAUDIOS
  2415  02B3                     l2349:
  2416                           
  2417                           ;usartlib.c: 13:      TRISCbits.TRISC7 = 1;
  2418  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  2419  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  2420  02B5  1787               	bsf	7,7	;volatile
  2421  02B6                     l2351:
  2422                           
  2423                           ;usartlib.c: 14:      TRISCbits.TRISC6 = 0;
  2424  02B6  1307               	bcf	7,6	;volatile
  2425  02B7                     l2353:
  2426                           
  2427                           ;usartlib.c: 15:      TXSTA = 0;
  2428  02B7  0198               	clrf	24	;volatile
  2429  02B8                     l2355:
  2430                           
  2431                           ;usartlib.c: 16:      RCSTA = 0;
  2432  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2433  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2434  02BA  0198               	clrf	24	;volatile
  2435  02BB                     l2357:
  2436                           
  2437                           ;usartlib.c: 17:      TXSTA = 0b00100110;
  2438  02BB  3026               	movlw	38
  2439  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  2440  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  2441  02BE  0098               	movwf	24	;volatile
  2442  02BF                     l2359:
  2443                           
  2444                           ;usartlib.c: 18:      RCSTA = 0b10010000;
  2445  02BF  3090               	movlw	144
  2446  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2447  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2448  02C2  0098               	movwf	24	;volatile
  2449  02C3                     l2361:
  2450                           
  2451                           ;usartlib.c: 19:      SPBRG = BAUDIOS;
  2452  02C3  0865               	movf	_BAUDIOS,w
  2453  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2454  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2455  02C6  0099               	movwf	25	;volatile
  2456  02C7                     l223:
  2457  02C7  0008               	return
  2458  02C8                     __end_of_USART_Init:
  2459                           
  2460                           	psect	text8
  2461  0126                     __ptext8:	
  2462 ;; *************** function ___aldiv *****************
  2463 ;; Defined at:
  2464 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  divisor         4    0[BANK0 ] long 
  2467 ;;  dividend        4    4[BANK0 ] long 
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;  quotient        4   11[BANK0 ] long 
  2470 ;;  sign            1   10[BANK0 ] unsigned char 
  2471 ;;  counter         1    9[BANK0 ] unsigned char 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  4    0[BANK0 ] long 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2, status,0, btemp+1
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2481 ;;      Params:         0       8       0       0       0
  2482 ;;      Locals:         0       6       0       0       0
  2483 ;;      Temps:          0       1       0       0       0
  2484 ;;      Totals:         0      15       0       0       0
  2485 ;;Total ram usage:       15 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    1
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_USART_Init
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function ___aldiv
  2497  0126                     ___aldiv:
  2498  0126                     l2157:	
  2499                           ;incstack = 0
  2500                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  2501                           
  2502  0126  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0127  1303               	bcf	3,6	;RP1=0, select bank0
  2504  0128  01AA               	clrf	___aldiv@sign
  2505  0129                     l2159:
  2506  0129  1FA3               	btfss	___aldiv@divisor+3,7
  2507  012A  292C               	goto	u1651
  2508  012B  292D               	goto	u1650
  2509  012C                     u1651:
  2510  012C  293A               	goto	l480
  2511  012D                     u1650:
  2512  012D                     l2161:
  2513  012D  09A0               	comf	___aldiv@divisor,f
  2514  012E  09A1               	comf	___aldiv@divisor+1,f
  2515  012F  09A2               	comf	___aldiv@divisor+2,f
  2516  0130  09A3               	comf	___aldiv@divisor+3,f
  2517  0131  0AA0               	incf	___aldiv@divisor,f
  2518  0132  1903               	skipnz
  2519  0133  0AA1               	incf	___aldiv@divisor+1,f
  2520  0134  1903               	skipnz
  2521  0135  0AA2               	incf	___aldiv@divisor+2,f
  2522  0136  1903               	skipnz
  2523  0137  0AA3               	incf	___aldiv@divisor+3,f
  2524  0138  01AA               	clrf	___aldiv@sign
  2525  0139  0AAA               	incf	___aldiv@sign,f
  2526  013A                     l480:
  2527  013A  1FA7               	btfss	___aldiv@dividend+3,7
  2528  013B  293D               	goto	u1661
  2529  013C  293E               	goto	u1660
  2530  013D                     u1661:
  2531  013D  294D               	goto	l2167
  2532  013E                     u1660:
  2533  013E                     l2163:
  2534  013E  09A4               	comf	___aldiv@dividend,f
  2535  013F  09A5               	comf	___aldiv@dividend+1,f
  2536  0140  09A6               	comf	___aldiv@dividend+2,f
  2537  0141  09A7               	comf	___aldiv@dividend+3,f
  2538  0142  0AA4               	incf	___aldiv@dividend,f
  2539  0143  1903               	skipnz
  2540  0144  0AA5               	incf	___aldiv@dividend+1,f
  2541  0145  1903               	skipnz
  2542  0146  0AA6               	incf	___aldiv@dividend+2,f
  2543  0147  1903               	skipnz
  2544  0148  0AA7               	incf	___aldiv@dividend+3,f
  2545  0149                     l2165:
  2546  0149  3001               	movlw	1
  2547  014A  00FF               	movwf	btemp+1
  2548  014B  087F               	movf	btemp+1,w
  2549  014C  06AA               	xorwf	___aldiv@sign,f
  2550  014D                     l2167:
  2551  014D  3000               	movlw	0
  2552  014E  00AE               	movwf	___aldiv@quotient+3
  2553  014F  3000               	movlw	0
  2554  0150  00AD               	movwf	___aldiv@quotient+2
  2555  0151  3000               	movlw	0
  2556  0152  00AC               	movwf	___aldiv@quotient+1
  2557  0153  3000               	movlw	0
  2558  0154  00AB               	movwf	___aldiv@quotient
  2559  0155                     l2169:
  2560  0155  0823               	movf	___aldiv@divisor+3,w
  2561  0156  0422               	iorwf	___aldiv@divisor+2,w
  2562  0157  0421               	iorwf	___aldiv@divisor+1,w
  2563  0158  0420               	iorwf	___aldiv@divisor,w
  2564  0159  1903               	skipnz
  2565  015A  295C               	goto	u1671
  2566  015B  295D               	goto	u1670
  2567  015C                     u1671:
  2568  015C  29AA               	goto	l2191
  2569  015D                     u1670:
  2570  015D                     l2171:
  2571  015D  01A9               	clrf	___aldiv@counter
  2572  015E  0AA9               	incf	___aldiv@counter,f
  2573  015F  296D               	goto	l2177
  2574  0160                     l2173:
  2575  0160  3001               	movlw	1
  2576  0161  00A8               	movwf	??___aldiv
  2577  0162                     u1685:
  2578  0162  1003               	clrc
  2579  0163  0DA0               	rlf	___aldiv@divisor,f
  2580  0164  0DA1               	rlf	___aldiv@divisor+1,f
  2581  0165  0DA2               	rlf	___aldiv@divisor+2,f
  2582  0166  0DA3               	rlf	___aldiv@divisor+3,f
  2583  0167  0BA8               	decfsz	??___aldiv,f
  2584  0168  2962               	goto	u1685
  2585  0169                     l2175:
  2586  0169  3001               	movlw	1
  2587  016A  00FF               	movwf	btemp+1
  2588  016B  087F               	movf	btemp+1,w
  2589  016C  07A9               	addwf	___aldiv@counter,f
  2590  016D                     l2177:
  2591  016D  1FA3               	btfss	___aldiv@divisor+3,7
  2592  016E  2970               	goto	u1691
  2593  016F  2971               	goto	u1690
  2594  0170                     u1691:
  2595  0170  2960               	goto	l2173
  2596  0171                     u1690:
  2597  0171                     l2179:
  2598  0171  3001               	movlw	1
  2599  0172  00A8               	movwf	??___aldiv
  2600  0173                     u1705:
  2601  0173  1003               	clrc
  2602  0174  0DAB               	rlf	___aldiv@quotient,f
  2603  0175  0DAC               	rlf	___aldiv@quotient+1,f
  2604  0176  0DAD               	rlf	___aldiv@quotient+2,f
  2605  0177  0DAE               	rlf	___aldiv@quotient+3,f
  2606  0178  0BA8               	decfsz	??___aldiv,f
  2607  0179  2973               	goto	u1705
  2608  017A                     l2181:
  2609  017A  0823               	movf	___aldiv@divisor+3,w
  2610  017B  0227               	subwf	___aldiv@dividend+3,w
  2611  017C  1D03               	skipz
  2612  017D  2988               	goto	u1715
  2613  017E  0822               	movf	___aldiv@divisor+2,w
  2614  017F  0226               	subwf	___aldiv@dividend+2,w
  2615  0180  1D03               	skipz
  2616  0181  2988               	goto	u1715
  2617  0182  0821               	movf	___aldiv@divisor+1,w
  2618  0183  0225               	subwf	___aldiv@dividend+1,w
  2619  0184  1D03               	skipz
  2620  0185  2988               	goto	u1715
  2621  0186  0820               	movf	___aldiv@divisor,w
  2622  0187  0224               	subwf	___aldiv@dividend,w
  2623  0188                     u1715:
  2624  0188  1C03               	skipc
  2625  0189  298B               	goto	u1711
  2626  018A  298C               	goto	u1710
  2627  018B                     u1711:
  2628  018B  299B               	goto	l2187
  2629  018C                     u1710:
  2630  018C                     l2183:
  2631  018C  0820               	movf	___aldiv@divisor,w
  2632  018D  02A4               	subwf	___aldiv@dividend,f
  2633  018E  0821               	movf	___aldiv@divisor+1,w
  2634  018F  1C03               	skipc
  2635  0190  0F21               	incfsz	___aldiv@divisor+1,w
  2636  0191  02A5               	subwf	___aldiv@dividend+1,f
  2637  0192  0822               	movf	___aldiv@divisor+2,w
  2638  0193  1C03               	skipc
  2639  0194  0F22               	incfsz	___aldiv@divisor+2,w
  2640  0195  02A6               	subwf	___aldiv@dividend+2,f
  2641  0196  0823               	movf	___aldiv@divisor+3,w
  2642  0197  1C03               	skipc
  2643  0198  0F23               	incfsz	___aldiv@divisor+3,w
  2644  0199  02A7               	subwf	___aldiv@dividend+3,f
  2645  019A                     l2185:
  2646  019A  142B               	bsf	___aldiv@quotient,0
  2647  019B                     l2187:
  2648  019B  3001               	movlw	1
  2649  019C                     u1725:
  2650  019C  1003               	clrc
  2651  019D  0CA3               	rrf	___aldiv@divisor+3,f
  2652  019E  0CA2               	rrf	___aldiv@divisor+2,f
  2653  019F  0CA1               	rrf	___aldiv@divisor+1,f
  2654  01A0  0CA0               	rrf	___aldiv@divisor,f
  2655  01A1  3EFF               	addlw	-1
  2656  01A2  1D03               	skipz
  2657  01A3  299C               	goto	u1725
  2658  01A4                     l2189:
  2659  01A4  3001               	movlw	1
  2660  01A5  02A9               	subwf	___aldiv@counter,f
  2661  01A6  1D03               	btfss	3,2
  2662  01A7  29A9               	goto	u1731
  2663  01A8  29AA               	goto	u1730
  2664  01A9                     u1731:
  2665  01A9  2971               	goto	l2179
  2666  01AA                     u1730:
  2667  01AA                     l2191:
  2668  01AA  082A               	movf	___aldiv@sign,w
  2669  01AB  1903               	btfsc	3,2
  2670  01AC  29AE               	goto	u1741
  2671  01AD  29AF               	goto	u1740
  2672  01AE                     u1741:
  2673  01AE  29BA               	goto	l2195
  2674  01AF                     u1740:
  2675  01AF                     l2193:
  2676  01AF  09AB               	comf	___aldiv@quotient,f
  2677  01B0  09AC               	comf	___aldiv@quotient+1,f
  2678  01B1  09AD               	comf	___aldiv@quotient+2,f
  2679  01B2  09AE               	comf	___aldiv@quotient+3,f
  2680  01B3  0AAB               	incf	___aldiv@quotient,f
  2681  01B4  1903               	skipnz
  2682  01B5  0AAC               	incf	___aldiv@quotient+1,f
  2683  01B6  1903               	skipnz
  2684  01B7  0AAD               	incf	___aldiv@quotient+2,f
  2685  01B8  1903               	skipnz
  2686  01B9  0AAE               	incf	___aldiv@quotient+3,f
  2687  01BA                     l2195:
  2688  01BA  082E               	movf	___aldiv@quotient+3,w
  2689  01BB  00A3               	movwf	?___aldiv+3
  2690  01BC  082D               	movf	___aldiv@quotient+2,w
  2691  01BD  00A2               	movwf	?___aldiv+2
  2692  01BE  082C               	movf	___aldiv@quotient+1,w
  2693  01BF  00A1               	movwf	?___aldiv+1
  2694  01C0  082B               	movf	___aldiv@quotient,w
  2695  01C1  00A0               	movwf	?___aldiv
  2696  01C2                     l490:
  2697  01C2  0008               	return
  2698  01C3                     __end_of___aldiv:
  2699                           
  2700                           	psect	text9
  2701  076B                     __ptext9:	
  2702 ;; *************** function _MCU_Init *****************
  2703 ;; Defined at:
  2704 ;;		line 80 in file "main.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, status,2, status,0, pclath, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2718 ;;      Params:         0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0
  2720 ;;      Temps:          0       0       0       0       0
  2721 ;;      Totals:         0       0       0       0       0
  2722 ;;Total ram usage:        0 bytes
  2723 ;; Hardware stack levels used:    1
  2724 ;; Hardware stack levels required when called:    2
  2725 ;; This function calls:
  2726 ;;		_PIC_Init
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _MCU_Init
  2734  076B                     _MCU_Init:
  2735  076B                     l2247:	
  2736                           ;incstack = 0
  2737                           ; Regs used in _MCU_Init: [wreg+status,2+status,0+pclath+cstack]
  2738                           
  2739                           
  2740                           ;main.c: 81:     OSCCONbits.SCS = 0;
  2741  076B  1683               	bsf	3,5	;RP0=1, select bank1
  2742  076C  1303               	bcf	3,6	;RP1=0, select bank1
  2743  076D  100F               	bcf	15,0	;volatile
  2744  076E                     l2249:
  2745                           
  2746                           ;main.c: 82:     PIC_Init();
  2747  076E  120A  118A  269F  120A  118A  	fcall	_PIC_Init
  2748  0773                     l122:
  2749  0773  0008               	return
  2750  0774                     __end_of_MCU_Init:
  2751                           
  2752                           	psect	text10
  2753  069F                     __ptext10:	
  2754 ;; *************** function _PIC_Init *****************
  2755 ;; Defined at:
  2756 ;;		line 65 in file "main.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;		None
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2770 ;;      Params:         0       0       0       0       0
  2771 ;;      Locals:         0       0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0
  2773 ;;      Totals:         0       0       0       0       0
  2774 ;;Total ram usage:        0 bytes
  2775 ;; Hardware stack levels used:    1
  2776 ;; Hardware stack levels required when called:    1
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_MCU_Init
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           
  2785                           ;psect for function _PIC_Init
  2786  069F                     _PIC_Init:
  2787  069F                     l2079:	
  2788                           ;incstack = 0
  2789                           ; Regs used in _PIC_Init: [wreg+status,2]
  2790                           
  2791                           
  2792                           ;main.c: 66:     ANSEL = 0;
  2793  069F  1683               	bsf	3,5	;RP0=1, select bank3
  2794  06A0  1703               	bsf	3,6	;RP1=1, select bank3
  2795  06A1  0188               	clrf	8	;volatile
  2796                           
  2797                           ;main.c: 67:     ANSELH = 0;
  2798  06A2  0189               	clrf	9	;volatile
  2799  06A3                     l2081:
  2800                           
  2801                           ;main.c: 68:     TRISB = 0b10000000;
  2802  06A3  3080               	movlw	128
  2803  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  2804  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  2805  06A6  0086               	movwf	6	;volatile
  2806  06A7                     l2083:
  2807                           
  2808                           ;main.c: 69:     TRISC = 0b10000000;
  2809  06A7  3080               	movlw	128
  2810  06A8  0087               	movwf	7	;volatile
  2811  06A9                     l2085:
  2812                           
  2813                           ;main.c: 70:     PIE1 = 0b00110000;
  2814  06A9  3030               	movlw	48
  2815  06AA  008C               	movwf	12	;volatile
  2816  06AB                     l2087:
  2817                           
  2818                           ;main.c: 71:     PIR1 = 0b00000000;
  2819  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2820  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2821  06AD  018C               	clrf	12	;volatile
  2822                           
  2823                           ;main.c: 72:     INTCON = 0b11000000;
  2824  06AE  30C0               	movlw	192
  2825  06AF  008B               	movwf	11	;volatile
  2826  06B0                     l2089:
  2827                           
  2828                           ;main.c: 73:     PORTB = 0;
  2829  06B0  0186               	clrf	6	;volatile
  2830  06B1                     l2091:
  2831                           
  2832                           ;main.c: 74:     PORTC = 7;
  2833  06B1  3007               	movlw	7
  2834  06B2  0087               	movwf	7	;volatile
  2835                           
  2836                           ;main.c: 75:     TRISD = 0;
  2837  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  2838  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  2839  06B5  0188               	clrf	8	;volatile
  2840  06B6                     l2093:
  2841                           
  2842                           ;main.c: 76:     PORTD = 1;
  2843  06B6  3001               	movlw	1
  2844  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2845  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2846  06B9  0088               	movwf	8	;volatile
  2847  06BA                     l2095:
  2848                           
  2849                           ;main.c: 77:     START = 1;
  2850  06BA  147B               	bsf	_START/(0+8),_START& (0+7)
  2851  06BB                     l119:
  2852  06BB  0008               	return
  2853  06BC                     __end_of_PIC_Init:
  2854                           
  2855                           	psect	text11
  2856  0756                     __ptext11:	
  2857 ;; *************** function _Color_Start *****************
  2858 ;; Defined at:
  2859 ;;		line 158 in file "main.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2873 ;;      Params:         0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0
  2876 ;;      Totals:         0       0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    3
  2880 ;; This function calls:
  2881 ;;		_PWM_Init
  2882 ;;		_loop
  2883 ;; This function is called by:
  2884 ;;		_main
  2885 ;;		_Test_ON
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           
  2890                           ;psect for function _Color_Start
  2891  0756                     _Color_Start:
  2892  0756                     l2251:	
  2893                           ;incstack = 0
  2894                           ; Regs used in _Color_Start: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2895                           
  2896                           
  2897                           ;main.c: 159:     PWM_Init();
  2898  0756  120A  118A  273A  120A  118A  	fcall	_PWM_Init
  2899  075B                     l2253:
  2900                           
  2901                           ;main.c: 160:     loop();
  2902  075B  120A  118A  267D  120A  118A  	fcall	_loop
  2903  0760                     l161:
  2904  0760  0008               	return
  2905  0761                     __end_of_Color_Start:
  2906                           
  2907                           	psect	text12
  2908  067D                     __ptext12:	
  2909 ;; *************** function _loop *****************
  2910 ;; Defined at:
  2911 ;;		line 143 in file "main.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;		None
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;		None
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0, btemp+1
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2925 ;;      Params:         0       0       0       0       0
  2926 ;;      Locals:         0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0
  2928 ;;      Totals:         0       0       0       0       0
  2929 ;;Total ram usage:        0 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    1
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_Color_Start
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           
  2940                           ;psect for function _loop
  2941  067D                     _loop:
  2942  067D                     l2107:	
  2943                           ;incstack = 0
  2944                           ; Regs used in _loop: [wreg+status,2+status,0+btemp+1]
  2945                           
  2946                           
  2947                           ;main.c: 144:     while(START){
  2948  067D  2E9A               	goto	l149
  2949  067E                     l150:
  2950                           
  2951                           ;main.c: 145:         PORTCbits.RC0 = 1;
  2952  067E  1283               	bcf	3,5	;RP0=0, select bank0
  2953  067F  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0680  1407               	bsf	7,0	;volatile
  2955  0681                     l2109:
  2956                           
  2957                           ;main.c: 146:         i=0;
  2958  0681  01F8               	clrf	_i
  2959                           
  2960                           ;main.c: 147:         while(i<Qr){
  2961  0682  2E87               	goto	l2113
  2962  0683                     l2111:
  2963                           
  2964                           ;main.c: 148:             i++;
  2965  0683  3001               	movlw	1
  2966  0684  00FF               	movwf	btemp+1
  2967  0685  087F               	movf	btemp+1,w
  2968  0686  07F8               	addwf	_i,f
  2969  0687                     l2113:
  2970                           
  2971                           ;main.c: 147:         while(i<Qr){
  2972  0687  0854               	movf	_Qr,w
  2973  0688  0278               	subwf	_i,w
  2974  0689  1C03               	skipc
  2975  068A  2E8C               	goto	u1571
  2976  068B  2E8D               	goto	u1570
  2977  068C                     u1571:
  2978  068C  2E83               	goto	l2111
  2979  068D                     u1570:
  2980  068D                     l153:
  2981                           
  2982                           ;main.c: 150:         PORTCbits.RC0 = 0;
  2983  068D  1007               	bcf	7,0	;volatile
  2984  068E                     l2115:
  2985                           
  2986                           ;main.c: 151:         i=0;
  2987  068E  01F8               	clrf	_i
  2988                           
  2989                           ;main.c: 152:         while(i<cnt_Deathline){
  2990  068F  2E94               	goto	l2119
  2991  0690                     l2117:
  2992                           
  2993                           ;main.c: 153:             i++;
  2994  0690  3001               	movlw	1
  2995  0691  00FF               	movwf	btemp+1
  2996  0692  087F               	movf	btemp+1,w
  2997  0693  07F8               	addwf	_i,f
  2998  0694                     l2119:
  2999                           
  3000                           ;main.c: 152:         while(i<cnt_Deathline){
  3001  0694  0851               	movf	_cnt_Deathline,w
  3002  0695  0278               	subwf	_i,w
  3003  0696  1C03               	skipc
  3004  0697  2E99               	goto	u1581
  3005  0698  2E9A               	goto	u1580
  3006  0699                     u1581:
  3007  0699  2E90               	goto	l2117
  3008  069A                     u1580:
  3009  069A                     l149:	
  3010                           ;main.c: 155:     }
  3011                           
  3012                           
  3013                           ;main.c: 144:     while(START){
  3014  069A  187B               	btfsc	_START/(0+8),_START& (0+7)
  3015  069B  2E9D               	goto	u1591
  3016  069C  2E9E               	goto	u1590
  3017  069D                     u1591:
  3018  069D  2E7E               	goto	l150
  3019  069E                     u1590:
  3020  069E                     l158:
  3021  069E  0008               	return
  3022  069F                     __end_of_loop:
  3023                           
  3024                           	psect	text13
  3025  073A                     __ptext13:	
  3026 ;; *************** function _PWM_Init *****************
  3027 ;; Defined at:
  3028 ;;		line 85 in file "main.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0, pclath, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3042 ;;      Params:         0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    2
  3049 ;; This function calls:
  3050 ;;		_TMR2_Cnf
  3051 ;; This function is called by:
  3052 ;;		_Color_Start
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           
  3057                           ;psect for function _PWM_Init
  3058  073A                     _PWM_Init:
  3059  073A                     l2097:	
  3060                           ;incstack = 0
  3061                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  3062                           
  3063                           
  3064                           ;main.c: 88:     TMR2_Cnf();
  3065  073A  120A  118A  2761  120A  118A  	fcall	_TMR2_Cnf
  3066  073F                     l2099:
  3067                           
  3068                           ;main.c: 90:     CCP1CON = 0b00001100;
  3069  073F  300C               	movlw	12
  3070  0740  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0741  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0742  0097               	movwf	23	;volatile
  3073  0743                     l2101:
  3074                           
  3075                           ;main.c: 91:     CCPR1L = Qb;
  3076  0743  0852               	movf	_Qb,w
  3077  0744  0095               	movwf	21	;volatile
  3078  0745                     l2103:
  3079                           
  3080                           ;main.c: 92:     CCP2CON = 0b00001100;
  3081  0745  300C               	movlw	12
  3082  0746  009D               	movwf	29	;volatile
  3083  0747                     l2105:
  3084                           
  3085                           ;main.c: 93:     CCPR2L = Qg;
  3086  0747  0853               	movf	_Qg,w
  3087  0748  009B               	movwf	27	;volatile
  3088  0749                     l125:
  3089  0749  0008               	return
  3090  074A                     __end_of_PWM_Init:
  3091                           
  3092                           	psect	text14
  3093  0761                     __ptext14:	
  3094 ;; *************** function _TMR2_Cnf *****************
  3095 ;; Defined at:
  3096 ;;		line 26 in file "configtmrs.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;		None
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;		None
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, status,2
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3110 ;;      Params:         0       0       0       0       0
  3111 ;;      Locals:         0       0       0       0       0
  3112 ;;      Temps:          0       0       0       0       0
  3113 ;;      Totals:         0       0       0       0       0
  3114 ;;Total ram usage:        0 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_PWM_Init
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           
  3125                           ;psect for function _TMR2_Cnf
  3126  0761                     _TMR2_Cnf:
  3127  0761                     l2003:	
  3128                           ;incstack = 0
  3129                           ; Regs used in _TMR2_Cnf: [wreg+status,2]
  3130                           
  3131                           
  3132                           ;configtmrs.c: 27:     T2CON = 0b00000101;
  3133  0761  3005               	movlw	5
  3134  0762  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0763  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0764  0092               	movwf	18	;volatile
  3137  0765                     l2005:
  3138                           
  3139                           ;configtmrs.c: 28:     TMR2 = 0;
  3140  0765  0191               	clrf	17	;volatile
  3141  0766                     l2007:
  3142                           
  3143                           ;configtmrs.c: 29:     PR2 = 255;
  3144  0766  30FF               	movlw	255
  3145  0767  1683               	bsf	3,5	;RP0=1, select bank1
  3146  0768  1303               	bcf	3,6	;RP1=0, select bank1
  3147  0769  0092               	movwf	18	;volatile
  3148  076A                     l278:
  3149  076A  0008               	return
  3150  076B                     __end_of_TMR2_Cnf:
  3151                           
  3152                           	psect	text15
  3153  0408                     __ptext15:	
  3154 ;; *************** function _CNF_Load *****************
  3155 ;; Defined at:
  3156 ;;		line 229 in file "main.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;		None
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3170 ;;      Params:         0       0       0       0       0
  3171 ;;      Locals:         0       0       0       0       0
  3172 ;;      Temps:          0       2       0       0       0
  3173 ;;      Totals:         0       2       0       0       0
  3174 ;;Total ram usage:        2 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    3
  3177 ;; This function calls:
  3178 ;;		_CNF_Color
  3179 ;;		_CNF_Distance
  3180 ;;		_CNF_Time
  3181 ;;		_EEPROM_Read
  3182 ;; This function is called by:
  3183 ;;		_main
  3184 ;; This function uses a non-reentrant model
  3185 ;;
  3186                           
  3187                           
  3188                           ;psect for function _CNF_Load
  3189  0408                     _CNF_Load:
  3190  0408                     l2333:	
  3191                           ;incstack = 0
  3192                           ; Regs used in _CNF_Load: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3193                           
  3194                           
  3195                           ;main.c: 232:     Qd = EEPROM_Read(51);
  3196  0408  3033               	movlw	51
  3197  0409  120A  118A  26BC  120A  118A  	fcall	_EEPROM_Read
  3198  040E  00FF               	movwf	btemp+1
  3199  040F  087F               	movf	btemp+1,w
  3200  0410  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0411  1303               	bcf	3,6	;RP1=0, select bank0
  3202  0412  00E3               	movwf	_Qd
  3203  0413                     l2335:
  3204                           
  3205                           ;main.c: 233:     CNF_Distance(Qd);
  3206  0413  0863               	movf	_Qd,w
  3207  0414  00B3               	movwf	??_CNF_Load
  3208  0415  01B4               	clrf	??_CNF_Load+1
  3209  0416  0833               	movf	??_CNF_Load,w
  3210  0417  00A0               	movwf	CNF_Distance@dist_ON
  3211  0418  0834               	movf	??_CNF_Load+1,w
  3212  0419  00A1               	movwf	CNF_Distance@dist_ON+1
  3213  041A  120A  118A  26EF  120A  118A  	fcall	_CNF_Distance
  3214  041F                     l2337:
  3215                           
  3216                           ;main.c: 235:     Qt = EEPROM_Read(52);
  3217  041F  3034               	movlw	52
  3218  0420  120A  118A  26BC  120A  118A  	fcall	_EEPROM_Read
  3219  0425  00FF               	movwf	btemp+1
  3220  0426  087F               	movf	btemp+1,w
  3221  0427  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0428  1303               	bcf	3,6	;RP1=0, select bank0
  3223  0429  00E4               	movwf	_Qt
  3224                           
  3225                           ;main.c: 236:     CNF_Time(Qt);
  3226  042A  0864               	movf	_Qt,w
  3227  042B  00B3               	movwf	??_CNF_Load
  3228  042C  01B4               	clrf	??_CNF_Load+1
  3229  042D  0833               	movf	??_CNF_Load,w
  3230  042E  00A0               	movwf	CNF_Time@tiempo_ON
  3231  042F  0834               	movf	??_CNF_Load+1,w
  3232  0430  00A1               	movwf	CNF_Time@tiempo_ON+1
  3233  0431  120A  118A  26D9  120A  118A  	fcall	_CNF_Time
  3234  0436                     l2339:
  3235                           
  3236                           ;main.c: 238:     Qr = EEPROM_Read(53);
  3237  0436  3035               	movlw	53
  3238  0437  120A  118A  26BC  120A  118A  	fcall	_EEPROM_Read
  3239  043C  00FF               	movwf	btemp+1
  3240  043D  087F               	movf	btemp+1,w
  3241  043E  1283               	bcf	3,5	;RP0=0, select bank0
  3242  043F  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0440  00D4               	movwf	_Qr
  3244  0441                     l2341:
  3245                           
  3246                           ;main.c: 239:     Qg = EEPROM_Read(54);
  3247  0441  3036               	movlw	54
  3248  0442  120A  118A  26BC  120A  118A  	fcall	_EEPROM_Read
  3249  0447  00FF               	movwf	btemp+1
  3250  0448  087F               	movf	btemp+1,w
  3251  0449  1283               	bcf	3,5	;RP0=0, select bank0
  3252  044A  1303               	bcf	3,6	;RP1=0, select bank0
  3253  044B  00D3               	movwf	_Qg
  3254  044C                     l2343:
  3255                           
  3256                           ;main.c: 240:     Qb = EEPROM_Read(55);
  3257  044C  3037               	movlw	55
  3258  044D  120A  118A  26BC  120A  118A  	fcall	_EEPROM_Read
  3259  0452  00FF               	movwf	btemp+1
  3260  0453  087F               	movf	btemp+1,w
  3261  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3263  0456  00D2               	movwf	_Qb
  3264  0457                     l2345:
  3265                           
  3266                           ;main.c: 242:     CNF_Color(Qr,Qg,Qb);
  3267  0457  0853               	movf	_Qg,w
  3268  0458  00FF               	movwf	btemp+1
  3269  0459  087F               	movf	btemp+1,w
  3270  045A  00AE               	movwf	CNF_Color@G
  3271  045B  0852               	movf	_Qb,w
  3272  045C  00FF               	movwf	btemp+1
  3273  045D  087F               	movf	btemp+1,w
  3274  045E  00AF               	movwf	CNF_Color@B
  3275  045F  0854               	movf	_Qr,w
  3276  0460  120A  118A  258C  120A  118A  	fcall	_CNF_Color
  3277  0465                     l187:
  3278  0465  0008               	return
  3279  0466                     __end_of_CNF_Load:
  3280                           
  3281                           	psect	text16
  3282  06BC                     __ptext16:	
  3283 ;; *************** function _EEPROM_Read *****************
  3284 ;; Defined at:
  3285 ;;		line 14 in file "eepromlib.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;  address         1    wreg     unsigned char 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  address         1    2[BANK0 ] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      unsigned char 
  3292 ;; Registers used:
  3293 ;;		wreg, btemp+1
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         0       0       0       0       0
  3300 ;;      Locals:         0       1       0       0       0
  3301 ;;      Temps:          0       2       0       0       0
  3302 ;;      Totals:         0       3       0       0       0
  3303 ;;Total ram usage:        3 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_CNF_Load
  3310 ;;		_main
  3311 ;;		_CNF_Print
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           
  3316                           ;psect for function _EEPROM_Read
  3317  06BC                     _EEPROM_Read:
  3318                           
  3319                           ;incstack = 0
  3320                           ; Regs used in _EEPROM_Read: [wreg+btemp+1]
  3321                           ;EEPROM_Read@address stored from wreg
  3322  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  3323  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  3324  06BE  00A2               	movwf	EEPROM_Read@address
  3325  06BF                     l2139:
  3326                           
  3327                           ;eepromlib.c: 15:     EEADR = address;
  3328  06BF  0822               	movf	EEPROM_Read@address,w
  3329  06C0  1283               	bcf	3,5	;RP0=0, select bank2
  3330  06C1  1703               	bsf	3,6	;RP1=1, select bank2
  3331  06C2  008D               	movwf	13	;volatile
  3332  06C3                     l2141:
  3333                           
  3334                           ;eepromlib.c: 16:     EECON1bits.EEPGD = 0;
  3335  06C3  1683               	bsf	3,5	;RP0=1, select bank3
  3336  06C4  1703               	bsf	3,6	;RP1=1, select bank3
  3337  06C5  138C               	bcf	12,7	;volsfr
  3338  06C6                     l2143:
  3339                           
  3340                           ;eepromlib.c: 17:     EECON1bits.RD = 1;
  3341  06C6  140C               	bsf	12,0	;volsfr
  3342  06C7                     l2145:
  3343                           
  3344                           ;eepromlib.c: 18:     dato = EEDAT;
  3345  06C7  1283               	bcf	3,5	;RP0=0, select bank2
  3346  06C8  1703               	bsf	3,6	;RP1=1, select bank2
  3347  06C9  080C               	movf	12,w	;volatile
  3348  06CA  00FF               	movwf	btemp+1
  3349  06CB  087F               	movf	btemp+1,w
  3350  06CC  00F6               	movwf	_dato
  3351  06CD                     l2147:
  3352                           
  3353                           ;eepromlib.c: 19:     _delay((unsigned long)((20)*(20000000/4000.0)));
  3354  06CD  3082               	movlw	130
  3355  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3356  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3357  06D0  00A1               	movwf	??_EEPROM_Read+1
  3358  06D1  30DD               	movlw	221
  3359  06D2  00A0               	movwf	??_EEPROM_Read
  3360  06D3                     u2037:
  3361  06D3  0BA0               	decfsz	??_EEPROM_Read,f
  3362  06D4  2ED3               	goto	u2037
  3363  06D5  0BA1               	decfsz	??_EEPROM_Read+1,f
  3364  06D6  2ED3               	goto	u2037
  3365  06D7                     l2149:
  3366                           
  3367                           ;eepromlib.c: 20:     return dato;
  3368  06D7  0876               	movf	_dato,w
  3369  06D8                     l298:
  3370  06D8  0008               	return
  3371  06D9                     __end_of_EEPROM_Read:
  3372                           
  3373                           	psect	text17
  3374  0466                     __ptext17:	
  3375 ;; *************** function _CNF_Default *****************
  3376 ;; Defined at:
  3377 ;;		line 212 in file "main.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3391 ;;      Params:         0       0       0       0       0
  3392 ;;      Locals:         0       0       0       0       0
  3393 ;;      Temps:          0       2       0       0       0
  3394 ;;      Totals:         0       2       0       0       0
  3395 ;;Total ram usage:        2 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    3
  3398 ;; This function calls:
  3399 ;;		_CNF_Color
  3400 ;;		_CNF_Distance
  3401 ;;		_CNF_Time
  3402 ;;		_EEPROM_Save
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;;		_CNF_Params
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           
  3410                           ;psect for function _CNF_Default
  3411  0466                     _CNF_Default:
  3412  0466                     l2317:	
  3413                           ;incstack = 0
  3414                           ; Regs used in _CNF_Default: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3415                           
  3416                           
  3417                           ;main.c: 215:     Qd = 150;
  3418  0466  3096               	movlw	150
  3419  0467  00FF               	movwf	btemp+1
  3420  0468  087F               	movf	btemp+1,w
  3421  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3422  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3423  046B  00E3               	movwf	_Qd
  3424  046C                     l2319:
  3425                           
  3426                           ;main.c: 216:     CNF_Distance(Qd);
  3427  046C  0863               	movf	_Qd,w
  3428  046D  00B3               	movwf	??_CNF_Default
  3429  046E  01B4               	clrf	??_CNF_Default+1
  3430  046F  0833               	movf	??_CNF_Default,w
  3431  0470  00A0               	movwf	CNF_Distance@dist_ON
  3432  0471  0834               	movf	??_CNF_Default+1,w
  3433  0472  00A1               	movwf	CNF_Distance@dist_ON+1
  3434  0473  120A  118A  26EF  120A  118A  	fcall	_CNF_Distance
  3435  0478                     l2321:
  3436                           
  3437                           ;main.c: 218:     Qt = 5;
  3438  0478  3005               	movlw	5
  3439  0479  00FF               	movwf	btemp+1
  3440  047A  087F               	movf	btemp+1,w
  3441  047B  1283               	bcf	3,5	;RP0=0, select bank0
  3442  047C  1303               	bcf	3,6	;RP1=0, select bank0
  3443  047D  00E4               	movwf	_Qt
  3444                           
  3445                           ;main.c: 219:     CNF_Time(Qt);
  3446  047E  0864               	movf	_Qt,w
  3447  047F  00B3               	movwf	??_CNF_Default
  3448  0480  01B4               	clrf	??_CNF_Default+1
  3449  0481  0833               	movf	??_CNF_Default,w
  3450  0482  00A0               	movwf	CNF_Time@tiempo_ON
  3451  0483  0834               	movf	??_CNF_Default+1,w
  3452  0484  00A1               	movwf	CNF_Time@tiempo_ON+1
  3453  0485  120A  118A  26D9  120A  118A  	fcall	_CNF_Time
  3454  048A                     l2323:
  3455                           
  3456                           ;main.c: 221:     Qr = 255;
  3457  048A  30FF               	movlw	255
  3458  048B  00FF               	movwf	btemp+1
  3459  048C  087F               	movf	btemp+1,w
  3460  048D  1283               	bcf	3,5	;RP0=0, select bank0
  3461  048E  1303               	bcf	3,6	;RP1=0, select bank0
  3462  048F  00D4               	movwf	_Qr
  3463  0490                     l2325:
  3464                           
  3465                           ;main.c: 222:     Qg = 0;
  3466  0490  01D3               	clrf	_Qg
  3467  0491                     l2327:
  3468                           
  3469                           ;main.c: 223:     Qb = 255;
  3470  0491  30FF               	movlw	255
  3471  0492  00FF               	movwf	btemp+1
  3472  0493  087F               	movf	btemp+1,w
  3473  0494  00D2               	movwf	_Qb
  3474  0495                     l2329:
  3475                           
  3476                           ;main.c: 224:     EEPROM_Save(127,Qd,Qt,Qr,Qg,Qb);
  3477  0495  0863               	movf	_Qd,w
  3478  0496  00FF               	movwf	btemp+1
  3479  0497  087F               	movf	btemp+1,w
  3480  0498  00A4               	movwf	EEPROM_Save@Qd
  3481  0499  0864               	movf	_Qt,w
  3482  049A  00FF               	movwf	btemp+1
  3483  049B  087F               	movf	btemp+1,w
  3484  049C  00A5               	movwf	EEPROM_Save@Qt
  3485  049D  0854               	movf	_Qr,w
  3486  049E  00FF               	movwf	btemp+1
  3487  049F  087F               	movf	btemp+1,w
  3488  04A0  00A6               	movwf	EEPROM_Save@Qr
  3489  04A1  0853               	movf	_Qg,w
  3490  04A2  00FF               	movwf	btemp+1
  3491  04A3  087F               	movf	btemp+1,w
  3492  04A4  00A7               	movwf	EEPROM_Save@Qg
  3493  04A5  0852               	movf	_Qb,w
  3494  04A6  00FF               	movwf	btemp+1
  3495  04A7  087F               	movf	btemp+1,w
  3496  04A8  00A8               	movwf	EEPROM_Save@Qb
  3497  04A9  307F               	movlw	127
  3498  04AA  120A  118A  24C0  120A  118A  	fcall	_EEPROM_Save
  3499  04AF                     l2331:
  3500                           
  3501                           ;main.c: 225:     CNF_Color(Qr,Qg,Qb);
  3502  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  3503  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  3504  04B1  0853               	movf	_Qg,w
  3505  04B2  00FF               	movwf	btemp+1
  3506  04B3  087F               	movf	btemp+1,w
  3507  04B4  00AE               	movwf	CNF_Color@G
  3508  04B5  0852               	movf	_Qb,w
  3509  04B6  00FF               	movwf	btemp+1
  3510  04B7  087F               	movf	btemp+1,w
  3511  04B8  00AF               	movwf	CNF_Color@B
  3512  04B9  0854               	movf	_Qr,w
  3513  04BA  120A  118A  258C  120A  118A  	fcall	_CNF_Color
  3514  04BF                     l184:
  3515  04BF  0008               	return
  3516  04C0                     __end_of_CNF_Default:
  3517                           
  3518                           	psect	text18
  3519  04C0                     __ptext18:	
  3520 ;; *************** function _EEPROM_Save *****************
  3521 ;; Defined at:
  3522 ;;		line 36 in file "eepromlib.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  i               1    wreg     unsigned char 
  3525 ;;  Qd              1    4[BANK0 ] unsigned char 
  3526 ;;  Qt              1    5[BANK0 ] unsigned char 
  3527 ;;  Qr              1    6[BANK0 ] unsigned char 
  3528 ;;  Qg              1    7[BANK0 ] unsigned char 
  3529 ;;  Qb              1    8[BANK0 ] unsigned char 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  i               1    9[BANK0 ] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      void 
  3534 ;; Registers used:
  3535 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3541 ;;      Params:         0       5       0       0       0
  3542 ;;      Locals:         0       1       0       0       0
  3543 ;;      Temps:          0       0       0       0       0
  3544 ;;      Totals:         0       6       0       0       0
  3545 ;;Total ram usage:        6 bytes
  3546 ;; Hardware stack levels used:    1
  3547 ;; Hardware stack levels required when called:    2
  3548 ;; This function calls:
  3549 ;;		_EEPROM_Write
  3550 ;; This function is called by:
  3551 ;;		_CNF_Default
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554                           
  3555                           
  3556                           ;psect for function _EEPROM_Save
  3557  04C0                     _EEPROM_Save:
  3558                           
  3559                           ;incstack = 0
  3560                           ; Regs used in _EEPROM_Save: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3561                           ;EEPROM_Save@i stored from wreg
  3562  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3563  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3564  04C2  00A9               	movwf	EEPROM_Save@i
  3565  04C3                     l2153:
  3566                           
  3567                           ;eepromlib.c: 37:     EEPROM_Write(50,i);
  3568  04C3  0829               	movf	EEPROM_Save@i,w
  3569  04C4  00FF               	movwf	btemp+1
  3570  04C5  087F               	movf	btemp+1,w
  3571  04C6  00A0               	movwf	EEPROM_Write@write
  3572  04C7  3032               	movlw	50
  3573  04C8  120A  118A  2638  120A  118A  	fcall	_EEPROM_Write
  3574                           
  3575                           ;eepromlib.c: 38:     EEPROM_Write(51,Qd);
  3576  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  3577  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  3578  04CF  0824               	movf	EEPROM_Save@Qd,w
  3579  04D0  00FF               	movwf	btemp+1
  3580  04D1  087F               	movf	btemp+1,w
  3581  04D2  00A0               	movwf	EEPROM_Write@write
  3582  04D3  3033               	movlw	51
  3583  04D4  120A  118A  2638  120A  118A  	fcall	_EEPROM_Write
  3584                           
  3585                           ;eepromlib.c: 39:     EEPROM_Write(52,Qt);
  3586  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  3587  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  3588  04DB  0825               	movf	EEPROM_Save@Qt,w
  3589  04DC  00FF               	movwf	btemp+1
  3590  04DD  087F               	movf	btemp+1,w
  3591  04DE  00A0               	movwf	EEPROM_Write@write
  3592  04DF  3034               	movlw	52
  3593  04E0  120A  118A  2638  120A  118A  	fcall	_EEPROM_Write
  3594                           
  3595                           ;eepromlib.c: 40:     EEPROM_Write(53,Qr);
  3596  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  3597  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  3598  04E7  0826               	movf	EEPROM_Save@Qr,w
  3599  04E8  00FF               	movwf	btemp+1
  3600  04E9  087F               	movf	btemp+1,w
  3601  04EA  00A0               	movwf	EEPROM_Write@write
  3602  04EB  3035               	movlw	53
  3603  04EC  120A  118A  2638  120A  118A  	fcall	_EEPROM_Write
  3604                           
  3605                           ;eepromlib.c: 41:     EEPROM_Write(54,Qg);
  3606  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  3607  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  3608  04F3  0827               	movf	EEPROM_Save@Qg,w
  3609  04F4  00FF               	movwf	btemp+1
  3610  04F5  087F               	movf	btemp+1,w
  3611  04F6  00A0               	movwf	EEPROM_Write@write
  3612  04F7  3036               	movlw	54
  3613  04F8  120A  118A  2638  120A  118A  	fcall	_EEPROM_Write
  3614                           
  3615                           ;eepromlib.c: 42:     EEPROM_Write(55,Qb);
  3616  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  3617  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  3618  04FF  0828               	movf	EEPROM_Save@Qb,w
  3619  0500  00FF               	movwf	btemp+1
  3620  0501  087F               	movf	btemp+1,w
  3621  0502  00A0               	movwf	EEPROM_Write@write
  3622  0503  3037               	movlw	55
  3623  0504  120A  118A  2638  120A  118A  	fcall	_EEPROM_Write
  3624  0509                     l304:
  3625  0509  0008               	return
  3626  050A                     __end_of_EEPROM_Save:
  3627                           
  3628                           	psect	text19
  3629  0638                     __ptext19:	
  3630 ;; *************** function _EEPROM_Write *****************
  3631 ;; Defined at:
  3632 ;;		line 23 in file "eepromlib.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  address         1    wreg     unsigned char 
  3635 ;;  write           1    0[BANK0 ] unsigned char 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  address         1    3[BANK0 ] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         0       1       0       0       0
  3648 ;;      Locals:         0       1       0       0       0
  3649 ;;      Temps:          0       2       0       0       0
  3650 ;;      Totals:         0       4       0       0       0
  3651 ;;Total ram usage:        4 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    1
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_EEPROM_Save
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           
  3662                           ;psect for function _EEPROM_Write
  3663  0638                     _EEPROM_Write:
  3664                           
  3665                           ;incstack = 0
  3666                           ; Regs used in _EEPROM_Write: [wreg]
  3667                           ;EEPROM_Write@address stored from wreg
  3668  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3670  063A  00A3               	movwf	EEPROM_Write@address
  3671  063B                     l2009:
  3672                           
  3673                           ;eepromlib.c: 24:     EEADR = address;
  3674  063B  0823               	movf	EEPROM_Write@address,w
  3675  063C  1283               	bcf	3,5	;RP0=0, select bank2
  3676  063D  1703               	bsf	3,6	;RP1=1, select bank2
  3677  063E  008D               	movwf	13	;volatile
  3678                           
  3679                           ;eepromlib.c: 25:     EEDAT = write;
  3680  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3681  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3682  0641  0820               	movf	EEPROM_Write@write,w
  3683  0642  1283               	bcf	3,5	;RP0=0, select bank2
  3684  0643  1703               	bsf	3,6	;RP1=1, select bank2
  3685  0644  008C               	movwf	12	;volatile
  3686  0645                     l2011:
  3687                           
  3688                           ;eepromlib.c: 26:     EECON1bits.EEPGD = 0;
  3689  0645  1683               	bsf	3,5	;RP0=1, select bank3
  3690  0646  1703               	bsf	3,6	;RP1=1, select bank3
  3691  0647  138C               	bcf	12,7	;volsfr
  3692  0648                     l2013:
  3693                           
  3694                           ;eepromlib.c: 27:     EECON1bits.WREN = 1;
  3695  0648  150C               	bsf	12,2	;volsfr
  3696  0649                     l2015:
  3697                           
  3698                           ;eepromlib.c: 28:     INTCONbits.GIE = 0;
  3699  0649  138B               	bcf	11,7	;volatile
  3700                           
  3701                           ;eepromlib.c: 29:     EECON2 = 0x55;
  3702  064A  3055               	movlw	85
  3703  064B  008D               	movwf	13	;volsfr
  3704                           
  3705                           ;eepromlib.c: 30:     EECON2 = 0xAA;
  3706  064C  30AA               	movlw	170
  3707  064D  008D               	movwf	13	;volsfr
  3708  064E                     l2017:
  3709                           
  3710                           ;eepromlib.c: 31:     EECON1bits.WR = 1;
  3711  064E  148C               	bsf	12,1	;volsfr
  3712  064F                     l2019:
  3713                           
  3714                           ;eepromlib.c: 32:     INTCONbits.GIE = 1;
  3715  064F  178B               	bsf	11,7	;volatile
  3716                           
  3717                           ;eepromlib.c: 33:     _delay((unsigned long)((20)*(20000000/4000.0)));
  3718  0650  3082               	movlw	130
  3719  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3720  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3721  0653  00A2               	movwf	??_EEPROM_Write+1
  3722  0654  30DD               	movlw	221
  3723  0655  00A1               	movwf	??_EEPROM_Write
  3724  0656                     u2047:
  3725  0656  0BA1               	decfsz	??_EEPROM_Write,f
  3726  0657  2E56               	goto	u2047
  3727  0658  0BA2               	decfsz	??_EEPROM_Write+1,f
  3728  0659  2E56               	goto	u2047
  3729  065A                     l301:
  3730  065A  0008               	return
  3731  065B                     __end_of_EEPROM_Write:
  3732                           
  3733                           	psect	text20
  3734  06D9                     __ptext20:	
  3735 ;; *************** function _CNF_Time *****************
  3736 ;; Defined at:
  3737 ;;		line 186 in file "main.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  tiempo_ON       2    0[BANK0 ] unsigned int 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;		None
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  1    wreg      void 
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3751 ;;      Params:         0       2       0       0       0
  3752 ;;      Locals:         0       0       0       0       0
  3753 ;;      Temps:          0       0       0       0       0
  3754 ;;      Totals:         0       2       0       0       0
  3755 ;;Total ram usage:        2 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:    1
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_CNF_Default
  3762 ;;		_CNF_Load
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           
  3767                           ;psect for function _CNF_Time
  3768  06D9                     _CNF_Time:
  3769  06D9                     l2127:	
  3770                           ;incstack = 0
  3771                           ; Regs used in _CNF_Time: [wreg+status,2+status,0]
  3772                           
  3773                           
  3774                           ;main.c: 187:     if(tiempo_ON > 0 && tiempo_ON <= 15){
  3775  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  3776  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  3777  06DB  0820               	movf	CNF_Time@tiempo_ON,w
  3778  06DC  0421               	iorwf	CNF_Time@tiempo_ON+1,w
  3779  06DD  1903               	btfsc	3,2
  3780  06DE  2EE0               	goto	u1621
  3781  06DF  2EE1               	goto	u1620
  3782  06E0                     u1621:
  3783  06E0  2EEE               	goto	l175
  3784  06E1                     u1620:
  3785  06E1                     l2129:
  3786  06E1  3000               	movlw	0
  3787  06E2  0221               	subwf	CNF_Time@tiempo_ON+1,w
  3788  06E3  3010               	movlw	16
  3789  06E4  1903               	skipnz
  3790  06E5  0220               	subwf	CNF_Time@tiempo_ON,w
  3791  06E6  1803               	skipnc
  3792  06E7  2EE9               	goto	u1631
  3793  06E8  2EEA               	goto	u1630
  3794  06E9                     u1631:
  3795  06E9  2EEE               	goto	l175
  3796  06EA                     u1630:
  3797  06EA                     l2131:
  3798                           
  3799                           ;main.c: 188:         time_ON = tiempo_ON;
  3800  06EA  0821               	movf	CNF_Time@tiempo_ON+1,w
  3801  06EB  00C8               	movwf	_time_ON+1
  3802  06EC  0820               	movf	CNF_Time@tiempo_ON,w
  3803  06ED  00C7               	movwf	_time_ON
  3804  06EE                     l175:	
  3805                           ;main.c: 189:     }else{
  3806                           
  3807  06EE  0008               	return
  3808  06EF                     __end_of_CNF_Time:
  3809                           
  3810                           	psect	text21
  3811  06EF                     __ptext21:	
  3812 ;; *************** function _CNF_Distance *****************
  3813 ;; Defined at:
  3814 ;;		line 177 in file "main.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  dist_ON         2    0[BANK0 ] unsigned int 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2, status,0
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3828 ;;      Params:         0       2       0       0       0
  3829 ;;      Locals:         0       0       0       0       0
  3830 ;;      Temps:          0       0       0       0       0
  3831 ;;      Totals:         0       2       0       0       0
  3832 ;;Total ram usage:        2 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:    1
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_CNF_Default
  3839 ;;		_CNF_Load
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           
  3844                           ;psect for function _CNF_Distance
  3845  06EF                     _CNF_Distance:
  3846  06EF                     l2121:	
  3847                           ;incstack = 0
  3848                           ; Regs used in _CNF_Distance: [wreg+status,2+status,0]
  3849                           
  3850                           
  3851                           ;main.c: 178:     if(dist_ON > 0 && dist_ON <= 400){
  3852  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3853  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3854  06F1  0820               	movf	CNF_Distance@dist_ON,w
  3855  06F2  0421               	iorwf	CNF_Distance@dist_ON+1,w
  3856  06F3  1903               	btfsc	3,2
  3857  06F4  2EF6               	goto	u1601
  3858  06F5  2EF7               	goto	u1600
  3859  06F6                     u1601:
  3860  06F6  2F04               	goto	l170
  3861  06F7                     u1600:
  3862  06F7                     l2123:
  3863  06F7  3001               	movlw	1
  3864  06F8  0221               	subwf	CNF_Distance@dist_ON+1,w
  3865  06F9  3091               	movlw	145
  3866  06FA  1903               	skipnz
  3867  06FB  0220               	subwf	CNF_Distance@dist_ON,w
  3868  06FC  1803               	skipnc
  3869  06FD  2EFF               	goto	u1611
  3870  06FE  2F00               	goto	u1610
  3871  06FF                     u1611:
  3872  06FF  2F04               	goto	l170
  3873  0700                     u1610:
  3874  0700                     l2125:
  3875                           
  3876                           ;main.c: 179:         distance_to_ON = dist_ON;
  3877  0700  0821               	movf	CNF_Distance@dist_ON+1,w
  3878  0701  00CA               	movwf	_distance_to_ON+1
  3879  0702  0820               	movf	CNF_Distance@dist_ON,w
  3880  0703  00C9               	movwf	_distance_to_ON
  3881  0704                     l170:	
  3882                           ;main.c: 180:     }else{
  3883                           
  3884  0704  0008               	return
  3885  0705                     __end_of_CNF_Distance:
  3886                           
  3887                           	psect	text22
  3888  058C                     __ptext22:	
  3889 ;; *************** function _CNF_Color *****************
  3890 ;; Defined at:
  3891 ;;		line 195 in file "main.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  R               1    wreg     unsigned char 
  3894 ;;  G               1   14[BANK0 ] unsigned char 
  3895 ;;  B               1   15[BANK0 ] unsigned char 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;  R               1   18[BANK0 ] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3907 ;;      Params:         0       2       0       0       0
  3908 ;;      Locals:         0       1       0       0       0
  3909 ;;      Temps:          0       2       0       0       0
  3910 ;;      Totals:         0       5       0       0       0
  3911 ;;Total ram usage:        5 bytes
  3912 ;; Hardware stack levels used:    1
  3913 ;; Hardware stack levels required when called:    2
  3914 ;; This function calls:
  3915 ;;		___awdiv
  3916 ;;		___wmul
  3917 ;; This function is called by:
  3918 ;;		_CNF_Default
  3919 ;;		_CNF_Load
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923                           
  3924                           ;psect for function _CNF_Color
  3925  058C                     _CNF_Color:
  3926                           
  3927                           ;incstack = 0
  3928                           ; Regs used in _CNF_Color: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3929                           ;CNF_Color@R stored from wreg
  3930  058C  1283               	bcf	3,5	;RP0=0, select bank0
  3931  058D  1303               	bcf	3,6	;RP1=0, select bank0
  3932  058E  00B2               	movwf	CNF_Color@R
  3933  058F                     l2133:
  3934                           
  3935                           ;main.c: 197:     Qr = 255 -R;
  3936  058F  0932               	comf	CNF_Color@R,w
  3937  0590  00FF               	movwf	btemp+1
  3938  0591  087F               	movf	btemp+1,w
  3939  0592  00D4               	movwf	_Qr
  3940                           
  3941                           ;main.c: 198:     Qg = 255 -G;
  3942  0593  092E               	comf	CNF_Color@G,w
  3943  0594  00FF               	movwf	btemp+1
  3944  0595  087F               	movf	btemp+1,w
  3945  0596  00D3               	movwf	_Qg
  3946                           
  3947                           ;main.c: 199:     Qb = 255 -B;
  3948  0597  092F               	comf	CNF_Color@B,w
  3949  0598  00FF               	movwf	btemp+1
  3950  0599  087F               	movf	btemp+1,w
  3951  059A  00D2               	movwf	_Qb
  3952  059B                     l2135:
  3953                           
  3954                           ;main.c: 200:     Qr = Qr*90/255;
  3955  059B  30FF               	movlw	255
  3956  059C  00A6               	movwf	___awdiv@divisor
  3957  059D  3000               	movlw	0
  3958  059E  00A7               	movwf	___awdiv@divisor+1
  3959  059F  0854               	movf	_Qr,w
  3960  05A0  00B0               	movwf	??_CNF_Color
  3961  05A1  01B1               	clrf	??_CNF_Color+1
  3962  05A2  0830               	movf	??_CNF_Color,w
  3963  05A3  00A0               	movwf	___wmul@multiplier
  3964  05A4  0831               	movf	??_CNF_Color+1,w
  3965  05A5  00A1               	movwf	___wmul@multiplier+1
  3966  05A6  305A               	movlw	90
  3967  05A7  00A2               	movwf	___wmul@multiplicand
  3968  05A8  3000               	movlw	0
  3969  05A9  00A3               	movwf	___wmul@multiplicand+1
  3970  05AA  120A  118A  25EE  120A  118A  	fcall	___wmul
  3971  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3972  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  3973  05B1  0821               	movf	?___wmul+1,w
  3974  05B2  00A9               	movwf	___awdiv@dividend+1
  3975  05B3  0820               	movf	?___wmul,w
  3976  05B4  00A8               	movwf	___awdiv@dividend
  3977  05B5  120A  118A  239F  120A  118A  	fcall	___awdiv
  3978  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3979  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  3980  05BC  0826               	movf	?___awdiv,w
  3981  05BD  00FF               	movwf	btemp+1
  3982  05BE  087F               	movf	btemp+1,w
  3983  05BF  00D4               	movwf	_Qr
  3984  05C0                     l2137:
  3985                           
  3986                           ;main.c: 201:     cnt_Deathline = 90-Qr;
  3987  05C0  0854               	movf	_Qr,w
  3988  05C1  3C5A               	sublw	90
  3989  05C2  00FF               	movwf	btemp+1
  3990  05C3  087F               	movf	btemp+1,w
  3991  05C4  00D1               	movwf	_cnt_Deathline
  3992  05C5                     l178:
  3993  05C5  0008               	return
  3994  05C6                     __end_of_CNF_Color:
  3995                           
  3996                           	psect	text23
  3997  05EE                     __ptext23:	
  3998 ;; *************** function ___wmul *****************
  3999 ;; Defined at:
  4000 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4003 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  product         2    4[BANK0 ] unsigned int 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  2    0[BANK0 ] unsigned int 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         0       4       0       0       0
  4016 ;;      Locals:         0       2       0       0       0
  4017 ;;      Temps:          0       0       0       0       0
  4018 ;;      Totals:         0       6       0       0       0
  4019 ;;Total ram usage:        6 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    1
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_CNF_Color
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           
  4030                           ;psect for function ___wmul
  4031  05EE                     ___wmul:
  4032  05EE                     l2021:	
  4033                           ;incstack = 0
  4034                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4035                           
  4036  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  4037  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  4038  05F0  01A4               	clrf	___wmul@product
  4039  05F1  01A5               	clrf	___wmul@product+1
  4040  05F2                     l2023:
  4041  05F2  1C20               	btfss	___wmul@multiplier,0
  4042  05F3  2DF5               	goto	u1431
  4043  05F4  2DF6               	goto	u1430
  4044  05F5                     u1431:
  4045  05F5  2DFC               	goto	l415
  4046  05F6                     u1430:
  4047  05F6                     l2025:
  4048  05F6  0822               	movf	___wmul@multiplicand,w
  4049  05F7  07A4               	addwf	___wmul@product,f
  4050  05F8  1803               	skipnc
  4051  05F9  0AA5               	incf	___wmul@product+1,f
  4052  05FA  0823               	movf	___wmul@multiplicand+1,w
  4053  05FB  07A5               	addwf	___wmul@product+1,f
  4054  05FC                     l415:
  4055  05FC  3001               	movlw	1
  4056  05FD                     u1445:
  4057  05FD  1003               	clrc
  4058  05FE  0DA2               	rlf	___wmul@multiplicand,f
  4059  05FF  0DA3               	rlf	___wmul@multiplicand+1,f
  4060  0600  3EFF               	addlw	-1
  4061  0601  1D03               	skipz
  4062  0602  2DFD               	goto	u1445
  4063  0603                     l2027:
  4064  0603  3001               	movlw	1
  4065  0604                     u1455:
  4066  0604  1003               	clrc
  4067  0605  0CA1               	rrf	___wmul@multiplier+1,f
  4068  0606  0CA0               	rrf	___wmul@multiplier,f
  4069  0607  3EFF               	addlw	-1
  4070  0608  1D03               	skipz
  4071  0609  2E04               	goto	u1455
  4072  060A                     l2029:
  4073  060A  0820               	movf	___wmul@multiplier,w
  4074  060B  0421               	iorwf	___wmul@multiplier+1,w
  4075  060C  1D03               	btfss	3,2
  4076  060D  2E0F               	goto	u1461
  4077  060E  2E10               	goto	u1460
  4078  060F                     u1461:
  4079  060F  2DF2               	goto	l2023
  4080  0610                     u1460:
  4081  0610                     l2031:
  4082  0610  0825               	movf	___wmul@product+1,w
  4083  0611  00A1               	movwf	?___wmul+1
  4084  0612  0824               	movf	___wmul@product,w
  4085  0613  00A0               	movwf	?___wmul
  4086  0614                     l417:
  4087  0614  0008               	return
  4088  0615                     __end_of___wmul:
  4089                           
  4090                           	psect	text24
  4091  039F                     __ptext24:	
  4092 ;; *************** function ___awdiv *****************
  4093 ;; Defined at:
  4094 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  divisor         2    6[BANK0 ] int 
  4097 ;;  dividend        2    8[BANK0 ] int 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  quotient        2   12[BANK0 ] int 
  4100 ;;  sign            1   11[BANK0 ] unsigned char 
  4101 ;;  counter         1   10[BANK0 ] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  2    6[BANK0 ] int 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0, btemp+1
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4111 ;;      Params:         0       4       0       0       0
  4112 ;;      Locals:         0       4       0       0       0
  4113 ;;      Temps:          0       0       0       0       0
  4114 ;;      Totals:         0       8       0       0       0
  4115 ;;Total ram usage:        8 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    1
  4118 ;; This function calls:
  4119 ;;		Nothing
  4120 ;; This function is called by:
  4121 ;;		_CNF_Color
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           
  4126                           ;psect for function ___awdiv
  4127  039F                     ___awdiv:
  4128  039F                     l2035:	
  4129                           ;incstack = 0
  4130                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4131                           
  4132  039F  1283               	bcf	3,5	;RP0=0, select bank0
  4133  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  4134  03A1  01AB               	clrf	___awdiv@sign
  4135  03A2                     l2037:
  4136  03A2  1FA7               	btfss	___awdiv@divisor+1,7
  4137  03A3  2BA5               	goto	u1471
  4138  03A4  2BA6               	goto	u1470
  4139  03A5                     u1471:
  4140  03A5  2BAD               	goto	l2043
  4141  03A6                     u1470:
  4142  03A6                     l2039:
  4143  03A6  09A6               	comf	___awdiv@divisor,f
  4144  03A7  09A7               	comf	___awdiv@divisor+1,f
  4145  03A8  0AA6               	incf	___awdiv@divisor,f
  4146  03A9  1903               	skipnz
  4147  03AA  0AA7               	incf	___awdiv@divisor+1,f
  4148  03AB                     l2041:
  4149  03AB  01AB               	clrf	___awdiv@sign
  4150  03AC  0AAB               	incf	___awdiv@sign,f
  4151  03AD                     l2043:
  4152  03AD  1FA9               	btfss	___awdiv@dividend+1,7
  4153  03AE  2BB0               	goto	u1481
  4154  03AF  2BB1               	goto	u1480
  4155  03B0                     u1481:
  4156  03B0  2BBA               	goto	l2049
  4157  03B1                     u1480:
  4158  03B1                     l2045:
  4159  03B1  09A8               	comf	___awdiv@dividend,f
  4160  03B2  09A9               	comf	___awdiv@dividend+1,f
  4161  03B3  0AA8               	incf	___awdiv@dividend,f
  4162  03B4  1903               	skipnz
  4163  03B5  0AA9               	incf	___awdiv@dividend+1,f
  4164  03B6                     l2047:
  4165  03B6  3001               	movlw	1
  4166  03B7  00FF               	movwf	btemp+1
  4167  03B8  087F               	movf	btemp+1,w
  4168  03B9  06AB               	xorwf	___awdiv@sign,f
  4169  03BA                     l2049:
  4170  03BA  01AC               	clrf	___awdiv@quotient
  4171  03BB  01AD               	clrf	___awdiv@quotient+1
  4172  03BC                     l2051:
  4173  03BC  0826               	movf	___awdiv@divisor,w
  4174  03BD  0427               	iorwf	___awdiv@divisor+1,w
  4175  03BE  1903               	btfsc	3,2
  4176  03BF  2BC1               	goto	u1491
  4177  03C0  2BC2               	goto	u1490
  4178  03C1                     u1491:
  4179  03C1  2BF9               	goto	l2071
  4180  03C2                     u1490:
  4181  03C2                     l2053:
  4182  03C2  01AA               	clrf	___awdiv@counter
  4183  03C3  0AAA               	incf	___awdiv@counter,f
  4184  03C4  2BD0               	goto	l2059
  4185  03C5                     l2055:
  4186  03C5  3001               	movlw	1
  4187  03C6                     u1505:
  4188  03C6  1003               	clrc
  4189  03C7  0DA6               	rlf	___awdiv@divisor,f
  4190  03C8  0DA7               	rlf	___awdiv@divisor+1,f
  4191  03C9  3EFF               	addlw	-1
  4192  03CA  1D03               	skipz
  4193  03CB  2BC6               	goto	u1505
  4194  03CC                     l2057:
  4195  03CC  3001               	movlw	1
  4196  03CD  00FF               	movwf	btemp+1
  4197  03CE  087F               	movf	btemp+1,w
  4198  03CF  07AA               	addwf	___awdiv@counter,f
  4199  03D0                     l2059:
  4200  03D0  1FA7               	btfss	___awdiv@divisor+1,7
  4201  03D1  2BD3               	goto	u1511
  4202  03D2  2BD4               	goto	u1510
  4203  03D3                     u1511:
  4204  03D3  2BC5               	goto	l2055
  4205  03D4                     u1510:
  4206  03D4                     l2061:
  4207  03D4  3001               	movlw	1
  4208  03D5                     u1525:
  4209  03D5  1003               	clrc
  4210  03D6  0DAC               	rlf	___awdiv@quotient,f
  4211  03D7  0DAD               	rlf	___awdiv@quotient+1,f
  4212  03D8  3EFF               	addlw	-1
  4213  03D9  1D03               	skipz
  4214  03DA  2BD5               	goto	u1525
  4215  03DB  0827               	movf	___awdiv@divisor+1,w
  4216  03DC  0229               	subwf	___awdiv@dividend+1,w
  4217  03DD  1D03               	skipz
  4218  03DE  2BE1               	goto	u1535
  4219  03DF  0826               	movf	___awdiv@divisor,w
  4220  03E0  0228               	subwf	___awdiv@dividend,w
  4221  03E1                     u1535:
  4222  03E1  1C03               	skipc
  4223  03E2  2BE4               	goto	u1531
  4224  03E3  2BE5               	goto	u1530
  4225  03E4                     u1531:
  4226  03E4  2BEC               	goto	l2067
  4227  03E5                     u1530:
  4228  03E5                     l2063:
  4229  03E5  0826               	movf	___awdiv@divisor,w
  4230  03E6  02A8               	subwf	___awdiv@dividend,f
  4231  03E7  0827               	movf	___awdiv@divisor+1,w
  4232  03E8  1C03               	skipc
  4233  03E9  03A9               	decf	___awdiv@dividend+1,f
  4234  03EA  02A9               	subwf	___awdiv@dividend+1,f
  4235  03EB                     l2065:
  4236  03EB  142C               	bsf	___awdiv@quotient,0
  4237  03EC                     l2067:
  4238  03EC  3001               	movlw	1
  4239  03ED                     u1545:
  4240  03ED  1003               	clrc
  4241  03EE  0CA7               	rrf	___awdiv@divisor+1,f
  4242  03EF  0CA6               	rrf	___awdiv@divisor,f
  4243  03F0  3EFF               	addlw	-1
  4244  03F1  1D03               	skipz
  4245  03F2  2BED               	goto	u1545
  4246  03F3                     l2069:
  4247  03F3  3001               	movlw	1
  4248  03F4  02AA               	subwf	___awdiv@counter,f
  4249  03F5  1D03               	btfss	3,2
  4250  03F6  2BF8               	goto	u1551
  4251  03F7  2BF9               	goto	u1550
  4252  03F8                     u1551:
  4253  03F8  2BD4               	goto	l2061
  4254  03F9                     u1550:
  4255  03F9                     l2071:
  4256  03F9  082B               	movf	___awdiv@sign,w
  4257  03FA  1903               	btfsc	3,2
  4258  03FB  2BFD               	goto	u1561
  4259  03FC  2BFE               	goto	u1560
  4260  03FD                     u1561:
  4261  03FD  2C03               	goto	l2075
  4262  03FE                     u1560:
  4263  03FE                     l2073:
  4264  03FE  09AC               	comf	___awdiv@quotient,f
  4265  03FF  09AD               	comf	___awdiv@quotient+1,f
  4266  0400  0AAC               	incf	___awdiv@quotient,f
  4267  0401  1903               	skipnz
  4268  0402  0AAD               	incf	___awdiv@quotient+1,f
  4269  0403                     l2075:
  4270  0403  082D               	movf	___awdiv@quotient+1,w
  4271  0404  00A7               	movwf	?___awdiv+1
  4272  0405  082C               	movf	___awdiv@quotient,w
  4273  0406  00A6               	movwf	?___awdiv
  4274  0407                     l568:
  4275  0407  0008               	return
  4276  0408                     __end_of___awdiv:
  4277                           
  4278                           	psect	text25
  4279  02C8                     __ptext25:	
  4280 ;; *************** function _pulsos *****************
  4281 ;; Defined at:
  4282 ;;		line 97 in file "main.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4296 ;;      Params:         0       0       0       0       0
  4297 ;;      Locals:         0       0       0       0       0
  4298 ;;      Temps:          6       0       0       0       0
  4299 ;;      Totals:         6       0       0       0       0
  4300 ;;Total ram usage:        6 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		Interrupt level 1
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           
  4310                           ;psect for function _pulsos
  4311  02C8                     _pulsos:
  4312  02C8                     i1l1833:
  4313                           
  4314                           ;main.c: 98:     if(INTCONbits.TMR0IF){
  4315  02C8  1D0B               	btfss	11,2	;volatile
  4316  02C9  2ACB               	goto	u127_21
  4317  02CA  2ACC               	goto	u127_20
  4318  02CB                     u127_21:
  4319  02CB  2AED               	goto	i1l130
  4320  02CC                     u127_20:
  4321  02CC                     i1l1835:
  4322                           
  4323                           ;main.c: 99:         TMR0 = 0;
  4324  02CC  0181               	clrf	1	;volatile
  4325  02CD                     i1l1837:
  4326                           
  4327                           ;main.c: 100:         cnt++;
  4328  02CD  3001               	movlw	1
  4329  02CE  00FF               	movwf	btemp+1
  4330  02CF  087F               	movf	btemp+1,w
  4331  02D0  07F9               	addwf	_cnt,f
  4332  02D1                     i1l1839:
  4333                           
  4334                           ;main.c: 101:         if(cnt == 75){
  4335  02D1  304B               	movlw	75
  4336  02D2  0679               	xorwf	_cnt,w
  4337  02D3  1D03               	btfss	3,2
  4338  02D4  2AD6               	goto	u128_21
  4339  02D5  2AD7               	goto	u128_20
  4340  02D6                     u128_21:
  4341  02D6  2AEA               	goto	i1l1849
  4342  02D7                     u128_20:
  4343  02D7                     i1l1841:
  4344                           
  4345                           ;main.c: 103:             cnt = 0;
  4346  02D7  01F9               	clrf	_cnt
  4347  02D8                     i1l1843:
  4348                           
  4349                           ;main.c: 104:             cnt_Seg++;
  4350  02D8  3001               	movlw	1
  4351  02D9  00FF               	movwf	btemp+1
  4352  02DA  087F               	movf	btemp+1,w
  4353  02DB  07FA               	addwf	_cnt_Seg,f
  4354  02DC                     i1l1845:
  4355                           
  4356                           ;main.c: 105:             if(cnt_Seg == time_ON){
  4357  02DC  087A               	movf	_cnt_Seg,w
  4358  02DD  00F0               	movwf	??_pulsos
  4359  02DE  01F1               	clrf	??_pulsos+1
  4360  02DF  0848               	movf	_time_ON+1,w
  4361  02E0  0671               	xorwf	??_pulsos+1,w
  4362  02E1  1D03               	skipz
  4363  02E2  2AE5               	goto	u129_25
  4364  02E3  0847               	movf	_time_ON,w
  4365  02E4  0670               	xorwf	??_pulsos,w
  4366  02E5                     u129_25:
  4367  02E5  1D03               	skipz
  4368  02E6  2AE8               	goto	u129_21
  4369  02E7  2AE9               	goto	u129_20
  4370  02E8                     u129_21:
  4371  02E8  2AEA               	goto	i1l1849
  4372  02E9                     u129_20:
  4373  02E9                     i1l1847:
  4374                           
  4375                           ;main.c: 106:                 START=0;
  4376  02E9  107B               	bcf	_START/(0+8),_START& (0+7)
  4377  02EA                     i1l1849:
  4378                           
  4379                           ;main.c: 109:         INTCON = 0b11100000;
  4380  02EA  30E0               	movlw	224
  4381  02EB  008B               	movwf	11	;volatile
  4382                           
  4383                           ;main.c: 110:     }else if(PIR1bits.RCIF){
  4384  02EC  2B2B               	goto	i1l137
  4385  02ED                     i1l130:
  4386  02ED  1E8C               	btfss	12,5	;volatile
  4387  02EE  2AF0               	goto	u130_21
  4388  02EF  2AF1               	goto	u130_20
  4389  02F0                     u130_21:
  4390  02F0  2B2B               	goto	i1l137
  4391  02F1                     u130_20:
  4392  02F1                     i1l1851:
  4393                           
  4394                           ;main.c: 111:         msj_packet[cuenta]=RCREG;
  4395  02F1  081A               	movf	26,w	;volatile
  4396  02F2  00FF               	movwf	btemp+1
  4397  02F3  0850               	movf	_cuenta,w
  4398  02F4  3EA0               	addlw	(low (_msj_packet| 0))& (0+255)
  4399  02F5  0084               	movwf	4
  4400  02F6  087F               	movf	btemp+1,w
  4401  02F7  1383               	bcf	3,7	;select IRP bank1
  4402  02F8  0080               	movwf	0
  4403  02F9                     i1l1853:
  4404                           
  4405                           ;main.c: 112:         if ((cuenta>3) && (msj_packet[cuenta]=='z') && (msj_packet[cuenta-
      +                          1]=='z') && (msj_packet[cuenta-2]=='z') ){
  4406  02F9  3004               	movlw	4
  4407  02FA  0250               	subwf	_cuenta,w
  4408  02FB  1C03               	skipc
  4409  02FC  2AFE               	goto	u131_21
  4410  02FD  2AFF               	goto	u131_20
  4411  02FE                     u131_21:
  4412  02FE  2B1E               	goto	i1l1863
  4413  02FF                     u131_20:
  4414  02FF                     i1l1855:
  4415  02FF  0850               	movf	_cuenta,w
  4416  0300  3EA0               	addlw	(low (_msj_packet| 0))& (0+255)
  4417  0301  0084               	movwf	4
  4418  0302  307A               	movlw	122
  4419  0303  0600               	xorwf	0,w
  4420  0304  1D03               	btfss	3,2
  4421  0305  2B07               	goto	u132_21
  4422  0306  2B08               	goto	u132_20
  4423  0307                     u132_21:
  4424  0307  2B1E               	goto	i1l1863
  4425  0308                     u132_20:
  4426  0308                     i1l1857:
  4427  0308  0850               	movf	_cuenta,w
  4428  0309  3E9F               	addlw	(low ((_msj_packet| 0+255)))& (0+255)
  4429  030A  0084               	movwf	4
  4430  030B  307A               	movlw	122
  4431  030C  0600               	xorwf	0,w
  4432  030D  1D03               	btfss	3,2
  4433  030E  2B10               	goto	u133_21
  4434  030F  2B11               	goto	u133_20
  4435  0310                     u133_21:
  4436  0310  2B1E               	goto	i1l1863
  4437  0311                     u133_20:
  4438  0311                     i1l1859:
  4439  0311  0850               	movf	_cuenta,w
  4440  0312  3E9E               	addlw	(low ((_msj_packet| 0+254)))& (0+255)
  4441  0313  0084               	movwf	4
  4442  0314  307A               	movlw	122
  4443  0315  0600               	xorwf	0,w
  4444  0316  1D03               	btfss	3,2
  4445  0317  2B19               	goto	u134_21
  4446  0318  2B1A               	goto	u134_20
  4447  0319                     u134_21:
  4448  0319  2B1E               	goto	i1l1863
  4449  031A                     u134_20:
  4450  031A                     i1l1861:
  4451                           
  4452                           ;main.c: 113:             flag_rx=1;
  4453  031A  01CF               	clrf	_flag_rx
  4454  031B  0ACF               	incf	_flag_rx,f
  4455                           
  4456                           ;main.c: 114:             CREN=0;
  4457  031C  1218               	bcf	24,4	;volatile
  4458                           
  4459                           ;main.c: 116:             INTCONbits.GIE=0;
  4460  031D  138B               	bcf	11,7	;volatile
  4461  031E                     i1l1863:
  4462                           
  4463                           ;main.c: 118:         cuenta++;
  4464  031E  3001               	movlw	1
  4465  031F  00FF               	movwf	btemp+1
  4466  0320  087F               	movf	btemp+1,w
  4467  0321  07D0               	addwf	_cuenta,f
  4468  0322                     i1l1865:
  4469                           
  4470                           ;main.c: 120:         if (cuenta>=30){
  4471  0322  301E               	movlw	30
  4472  0323  0250               	subwf	_cuenta,w
  4473  0324  1C03               	skipc
  4474  0325  2B27               	goto	u135_21
  4475  0326  2B28               	goto	u135_20
  4476  0327                     u135_21:
  4477  0327  2B2A               	goto	i1l1869
  4478  0328                     u135_20:
  4479  0328                     i1l1867:
  4480                           
  4481                           ;main.c: 121:             flag_rx=0;
  4482  0328  01CF               	clrf	_flag_rx
  4483                           
  4484                           ;main.c: 122:             cuenta=0;
  4485  0329  01D0               	clrf	_cuenta
  4486  032A                     i1l1869:
  4487                           
  4488                           ;main.c: 124:         PIR1bits.RCIF=0;
  4489  032A  128C               	bcf	12,5	;volatile
  4490  032B                     i1l137:
  4491  032B  0875               	movf	??_pulsos+5,w
  4492  032C  00FF               	movwf	btemp+1
  4493  032D  0874               	movf	??_pulsos+4,w
  4494  032E  008A               	movwf	10
  4495  032F  0873               	movf	??_pulsos+3,w
  4496  0330  0084               	movwf	4
  4497  0331  0E72               	swapf	(??_pulsos+2)^(0+4294967168),w
  4498  0332  0083               	movwf	3
  4499  0333  0EFE               	swapf	btemp,f
  4500  0334  0E7E               	swapf	btemp,w
  4501  0335  0009               	retfie
  4502  0336                     __end_of_pulsos:
  4503  007E                     btemp	set	126	;btemp
  4504  007E                     wtemp0	set	126
  4505                           
  4506                           	psect	intentry
  4507  0004                     __pintentry:	
  4508                           ;incstack = 0
  4509                           ; Regs used in _pulsos: [wreg-fsr0h+status,2+status,0+btemp+1]
  4510                           
  4511  0004                     interrupt_function:
  4512  007E                     saved_w	set	btemp
  4513  0004  00FE               	movwf	btemp
  4514  0005  0E03               	swapf	3,w
  4515  0006  00F2               	movwf	??_pulsos+2
  4516  0007  0804               	movf	4,w
  4517  0008  00F3               	movwf	??_pulsos+3
  4518  0009  080A               	movf	10,w
  4519  000A  00F4               	movwf	??_pulsos+4
  4520  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4521  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4522  000D  087F               	movf	btemp+1,w
  4523  000E  00F5               	movwf	??_pulsos+5
  4524  000F  120A  118A  2AC8   	ljmp	_pulsos
  4525                           
  4526                           	psect	config
  4527                           
  4528                           ;Config register CONFIG1 @ 0x2007
  4529                           ;	Oscillator Selection bits
  4530                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  4531                           ;	Watchdog Timer Enable bit
  4532                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4533                           ;	Power-up Timer Enable bit
  4534                           ;	PWRTE = OFF, PWRT disabled
  4535                           ;	RE3/MCLR pin function select bit
  4536                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4537                           ;	Code Protection bit
  4538                           ;	CP = OFF, Program memory code protection is disabled
  4539                           ;	Data Code Protection bit
  4540                           ;	CPD = OFF, Data memory code protection is disabled
  4541                           ;	Brown Out Reset Selection bits
  4542                           ;	BOREN = OFF, BOR disabled
  4543                           ;	Internal External Switchover bit
  4544                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4545                           ;	Fail-Safe Clock Monitor Enabled bit
  4546                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4547                           ;	Low Voltage Programming Enable bit
  4548                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4549                           ;	In-Circuit Debugger Mode bit
  4550                           ;	DEBUG = 0x1, unprogrammed default
  4551  2007                     	org	8199
  4552  2007  20D2               	dw	8402
  4553                           
  4554                           ;Config register CONFIG2 @ 0x2008
  4555                           ;	Brown-out Reset Selection bit
  4556                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4557                           ;	Flash Program Memory Self Write Enable bits
  4558                           ;	WRT = OFF, Write protection off
  4559  2008                     	org	8200
  4560  2008  3FFF               	dw	16383

Data Sizes:
    Strings     79
    Constant    10
    Data        69
    BSS         56
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     37      71
    BANK1            80      0      53
    BANK3            96      0      35
    BANK2            96      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(1) Largest target is 35
		 -> msj_packet(BANK1[35]), 

    memset@p	PTR unsigned char  size(1) Largest target is 35
		 -> msj_packet(BANK1[35]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 43
		 -> STR_3(CODE[26]), STR_1(CODE[43]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 35
		 -> msj_packet(BANK1[35]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    USART_SendText@cadena	PTR unsigned char  size(2) Largest target is 35
		 -> STR_2(CODE[10]), msj_cnf_param(BANK3[35]), msj_packet(BANK1[35]), 

    sp__memset	PTR void  size(1) Largest target is 35
		 -> msj_packet(BANK1[35]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _pulsos in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_USART_Init
    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _USART_SendText->_USART_SendChar
    _USART_Init->___aldiv
    _CNF_Load->_CNF_Color
    _CNF_Default->_CNF_Color
    _EEPROM_Save->_EEPROM_Write
    _CNF_Color->___awdiv
    ___awdiv->___wmul

Critical Paths under _pulsos in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pulsos in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pulsos in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pulsos in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8754
                                             35 BANK0      2     2      0
                        _CNF_Default
                           _CNF_Load
                        _Color_Start
                        _EEPROM_Read
                           _MCU_Init
                         _USART_Init
                     _USART_SendText
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             31    18     13    1651
                                             12 BANK0     23    10     13
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               6     2      4     569
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _USART_SendText                                       2     0      2     456
                                              1 BANK0      2     0      2
                     _USART_SendChar
 ---------------------------------------------------------------------------------
 (2) _USART_SendChar                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                          20    12      8     898
                                             15 BANK0     20    12      8
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
                           _PIC_Init
 ---------------------------------------------------------------------------------
 (2) _PIC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Start                                          0     0      0       0
                           _PWM_Init
                               _loop
 ---------------------------------------------------------------------------------
 (2) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             0     0      0       0
                           _TMR2_Cnf
 ---------------------------------------------------------------------------------
 (3) _TMR2_Cnf                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CNF_Load                                             2     2      0    1971
                                             19 BANK0      2     2      0
                          _CNF_Color
                       _CNF_Distance
                           _CNF_Time
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _CNF_Default                                          2     2      0    3178
                                             19 BANK0      2     2      0
                          _CNF_Color
                       _CNF_Distance
                           _CNF_Time
                        _EEPROM_Save
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Save                                          6     1      5    1238
                                              4 BANK0      6     1      5
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Write                                         4     3      1     602
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _CNF_Time                                             2     0      2     273
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CNF_Distance                                         2     0      2     273
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CNF_Color                                            5     3      2    1394
                                             14 BANK0      5     3      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     625
                                              6 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _pulsos                                               6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CNF_Default
     _CNF_Color
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _CNF_Distance
     _CNF_Time
     _EEPROM_Save
       _EEPROM_Write
   _CNF_Load
     _CNF_Color
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _CNF_Distance
     _CNF_Time
     _EEPROM_Read
   _Color_Start
     _PWM_Init
       _TMR2_Cnf
     _loop
   _EEPROM_Read
   _MCU_Init
     _PIC_Init
   _USART_Init
     ___aldiv
   _USART_SendText
     _USART_SendChar
   _memset
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _pulsos (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      23       9       36.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      35       7       66.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     25      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       C       1       85.7%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AB      12        0.0%
ABS                  0      0      AB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Nov 28 11:41:59 2020

                      _i 0078                        pc 0002   __end_of_USART_SendChar 0756  
                     _Qb 0052                       _Qd 0063                       _Qg 0053  
           ___awdiv@sign 002B                       _Qr 0054                       _Qt 0064  
 __end_of_USART_SendText 05EE                       fsr 0004      ___wmul@multiplicand 0022  
                    l122 0773                      l301 065A                      l125 0749  
                    l150 067E                      l119 06BB                      l223 02C7  
                    l231 074F                      l304 0509                      l240 05ED  
                    l153 068D                      l161 0760                      l170 0704  
                    l234 0755                      l411 0125                      l149 069A  
                    l158 069E                      l415 05FC                      l175 06EE  
                    l184 04BF                      l417 0614                      l178 05C5  
                    l187 0465                      l278 076A                      l480 013A  
                    l298 06D8                      l490 01C2                      l568 0407  
                    l687 054F                      l697 058B                      l869 067C  
                    _PR2 0092                      _cnt 0079                      fsr0 0004  
                    indf 0000                     l2011 0645                     l2003 0761  
                   l2021 05EE                     l2013 0648                     l2005 0765  
                   l2101 0743                     l2031 0610                     l2023 05F2  
                   l2015 0649                     l2007 0766                     l2103 0745  
                   l2111 0683                     l2041 03AB                     l2025 05F6  
     __size_of_CNF_Color 003A                     l2121 06EF                     l2017 064E  
                   l2009 063B                     l2105 0747                     l2113 0687  
                   l2201 050E                     l2051 03BC                     l2043 03AD  
                   l2035 039F                     l2027 0603                     l2123 06F7  
                   l2131 06EA                     l2019 064F                     l2115 068E  
                   l2107 067D                     l2211 0526                     l2203 0514  
                   l2061 03D4                     l2053 03C2                     l2045 03B1  
                   l2037 03A2                     l2029 060A                     l2133 058F  
                   l2125 0700                     l2141 06C3                     l2117 0690  
                   l2109 0681                     l2213 0537                     l2205 0517  
                   l2221 054B                     l2301 0121                     l2063 03E5  
                   l2055 03C5                     l2071 03F9                     l2047 03B6  
                   l2039 03A6                     l2135 059B                     l2127 06D9  
                   l2143 06C6                     l2119 0694                     l2311 05C7  
                   l2215 053D                     l2207 051E                     l2231 0562  
                   l2073 03FE                     l2065 03EB                     l2057 03CC  
                   l2049 03BA                     l2137 05C0                     l2129 06E1  
                   l2153 04C3                     l2321 0478                     l2145 06C7  
                   l2081 06A3                     l2161 012D                     l2313 05D5  
                   l2217 053E                     l2209 0522                     l2241 0581  
                   l2233 0566                     l2225 0550                     l2075 0403  
                   l2067 03EC                     l2059 03D0                     l2331 04AF  
                   l2323 048A                     l2147 06CD                     l2139 06BF  
                   l2251 0756                     l2091 06B1                     l2083 06A7  
                   l2171 015D                     l2163 013E                     l2155 074D  
                   l2315 05DD                     l2219 0545                     l2235 056A  
                   l2227 0558                     l2243 0587                     l2411 01F8  
                   l2403 01C3                     l2069 03F3                     l2325 0490  
                   l2317 0466                     l2149 06D7                     l2341 0441  
                   l2333 0408                     l2253 075B                     l2093 06B6  
                   l2085 06A9                     l2181 017A                     l2173 0160  
                   l2165 0149                     l2157 0126                     l2309 05C6  
                   l2237 0574                     l2229 055B                     l2261 006C  
                   l2421 021F                     l2413 0203                     l2405 01C8  
                   l2327 0491                     l2319 046C                     l2343 044C  
                   l2335 0413                     l2095 06BA                     l2087 06AB  
                   l2079 069F                     l2247 076B                     l2183 018C  
                   l2175 0169                     l2191 01AA                     l2167 014D  
                   l2159 0129                     l2351 02B6                     l2239 057A  
                   l2271 0092                     l2263 0071                     l2255 005A  
                   l2431 0244                     l2423 0226                     l2415 020E  
                   l2407 01DF                     l2329 0495                     l2345 0457  
                   l2337 041F                     l2097 073A                     l2089 06B0  
                   l2249 076E                     l2193 01AF                     l2185 019A  
                   l2177 016D                     l2169 0155                     l2361 02C3  
                   l2353 02B7                     l2281 00A0                     l2273 009A  
                   l2265 0073                     l2257 005F                     l2433 0245  
                   l2425 023F                     l2417 0214                     l2409 01EE  
                   l2339 0436                     l2099 073F                     l2195 01BA  
                   l2187 019B                     l2179 0171                     l2355 02B8  
                   l2347 0258                     l2363 065E                     l2291 00CB  
                   l2275 009E                     l2259 0065                     l2435 024F  
                   l2427 0242                     l2419 021A                     l2189 01A4  
                   l2357 02BB                     l2349 02B3                     l2365 0663  
                   l2293 00FB                     l2285 00BC                     l2269 0078  
                   l2429 0243                     l2359 02BF                     l2367 066A  
                   l2199 050A                     l2295 0102                     l2287 00C0  
                   l2369 066E                     l2297 0106                     l2289 00C6  
                   l2457 008A                     l2299 010F                     STR_1 0350  
                   STR_2 0395                     STR_3 037B                     _CREN 00C4  
                   u2000 0214                     u2001 0213                     u2010 0226  
                   u2011 0225                     u2027 01F4                     u2037 06D3  
                   u1510 03D4                     u1430 05F6                     u1511 03D3  
                   u1431 05F5                     u2047 0656                     u1600 06F7  
                   u1505 03C6                     u1601 06F6                     u1530 03E5  
                   u1610 0700                     u1531 03E4                     u1611 06FF  
                   u1460 0610                     u1620 06E1                     u1525 03D5  
                   u1461 060F                     u1445 05FD                     u1621 06E0  
                   u1550 03F9                     u1470 03A6                     u1630 06EA  
                   u1710 018C                     u1551 03F8                     u1535 03E1  
                   u1471 03A5                     u1455 0604                     u1631 06E9  
                   u1711 018B                     u1560 03FE                     u1480 03B1  
                   u1640 0755                     u1561 03FD                     u1545 03ED  
                   u1481 03B0                     u1705 0173                     u1641 0754  
                   u1490 03C2                     u1570 068D                     u1730 01AA  
                   u1650 012D                     u1810 054B                     u1491 03C1  
                   u1571 068C                     u1731 01A9                     u1715 0188  
                   u1651 012C                     u1811 054A                     u1580 069A  
                   u1740 01AF                     u1660 013E                     u1820 0558  
                   u1900 00C6                     u1581 0699                     u1741 01AE  
                   u1725 019C                     u1661 013D                     u1805 053F  
                   u1821 0557                     u1901 00C5                     u1590 069E  
                   u1670 015D                     u1750 0514                     u1910 010F  
                   u1591 069D                     u1671 015C                     u1751 0513  
                   u1911 010E                     _PIE1 008C                     u1840 056A  
                   u1920 0121                     u1841 0569                     u1921 0120  
                   u1690 0171                     u1930 05ED                     u1770 0526  
                   u1850 0574                     u1691 0170                     u1931 05EC  
                   u1771 0525                     u1851 0573                     u1835 055C  
                   u1940 0268                     u1685 0162                     u1765 0518  
                   u1950 0281                     u1790 0537                     u1870 0587  
                   u1791 0536                     u1871 0586                     u1855 0570  
                   u1880 0065                     u1961 0293                     u1945 0263  
                   u1785 0527                     u1865 057B                     u1881 0064  
                   u1962 0294                     u1970 067C                     u1890 00BB  
                   u1963 0299                     u1955 027C                     u1971 067B  
                   u1795 0533                     u1891 00BA                     u1964 029A  
                   u1965 029F                     u1966 02A0                     u1895 00B7  
                   _PIR1 000C                     _TMR0 0001                     _TMR2 0011  
                   _TRMT 04C1                     _dato 0076                     _main 01C3  
                   _loop 067D                     btemp 007E                     start 0012  
       __end_of_CNF_Load 0466         __end_of_CNF_Time 06EF     __end_of_EEPROM_Write 065B  
        ?_USART_SendChar 0070          ?_USART_SendText 0021          __end_of___aldiv 01C3  
    __end_of_Color_Start 0761                    ?_main 0070          __end_of___awdiv 0408  
                  _EEADR 010D                    ?_loop 0070                    _EEDAT 010C  
                  _ANSEL 0188          ___awdiv@divisor 0026                    _T2CON 0012  
        __end_of___lwdiv 0550                    i1l130 02ED         __end_of_MCU_Init 0774  
                  i1l137 032B          __end_of___lwmod 058C          ___awdiv@counter 002A  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
       __end_of_PIC_Init 06BC                    _START 03D8                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TXREG 0019  
                  _TXSTA 0098         __end_of_TMR2_Cnf 076B          __end_of_dpowers 0350  
                  pclath 000A         __end_of_PWM_Init 074A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0126     __size_of_EEPROM_Read 001D  
            ?_USART_Init 002F     __size_of_EEPROM_Save 004A          __initialization 0015  
           __end_of_main 0258             __end_of_loop 069F        __end_of_CNF_Color 05C6  
                 ??_main 0043     __end_of_CNF_Distance 0705                   ??_loop 0020  
   __size_of_CNF_Default 005A                   _CCPR1L 0015                   _CCPR2L 001B  
                 _EECON2 018D         ___awdiv@dividend 0028                   _ANSELH 0189  
                 u130_20 02F1                   u130_21 02F0                   i1l1841 02D7  
                 i1l1833 02C8                   i1l1851 02F1                   i1l1843 02D8  
                 i1l1835 02CC                   i1l1861 031A                   i1l1853 02F9  
                 i1l1845 02DC                   i1l1837 02CD                   i1l1855 02FF  
                 i1l1863 031E                   i1l1847 02E9                   i1l1839 02D1  
                 u131_20 02FF                   i1l1865 0322                   i1l1857 0308  
                 u131_21 02FE                   i1l1849 02EA                   i1l1867 0328  
                 i1l1859 0311                   i1l1869 032A                   u132_20 0308  
                 u132_21 0307                   u133_20 0311                   u133_21 0310  
                 u134_20 031A                   u134_21 0319                   u135_20 0328  
                 u127_20 02CC                   u135_21 0327                   u127_21 02CB  
                 u128_20 02D7                   u128_21 02D6                   u129_20 02E9  
                 _INTCON 000B                   u129_21 02E8                   u129_25 02E5  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TMR2IE 0461  
                 _TMR2IF 0061              _Color_Start 0756                ??___aldiv 0028  
                 ___wmul 05EE                ??___awdiv 002A                ??___lwdiv 0024  
              ??___lwmod 002B                   _cuenta 0050                   _memset 065B  
       ___awdiv@quotient 002C                   _pulsos 02C8                   saved_w 007E  
    __size_of_USART_Init 0070                ??_sprintf 0039                ?_CNF_Load 0070  
              ?_CNF_Time 0020  __end_of__initialization 0053        EEPROM_Write@write 0020  
  __size_of_EEPROM_Write 0023                ?_MCU_Init 0070                ?_PIC_Init 0070  
         __pcstackCOMMON 0070             __pidataBANK0 072A             __pidataBANK1 0718  
           __pidataBANK3 0615                ?_TMR2_Cnf 0070                ?_PWM_Init 0070  
           _EEPROM_Write 0638               ??_CNF_Load 0033               __pbssBANK0 0045  
             __pbssBANK1 00A0               ??_CNF_Time 0022               ??_MCU_Init 0020  
       ??_USART_SendChar 0020         ??_USART_SendText 0023               ??_PIC_Init 0020  
             __pmaintext 01C3                  ?___wmul 0020    __size_of_CNF_Distance 0016  
             ??_TMR2_Cnf 0020               __pintentry 0004                  _CCP1CON 0017  
                _CCP2CON 001D                  ?_memset 0020                  _BAUDIOS 0065  
             ??_PWM_Init 0020                  ?_pulsos 0070               __stringtab 0336  
           _CNF_Distance 06EF             ??_USART_Init 0037                  ___aldiv 0126  
                ___awdiv 039F          __size_of___wmul 0027                  ___lwdiv 050A  
                ___lwmod 0550          __size_of_memset 0022           USART_Init@XTAL 002F  
                _flag_rx 004F                  __ptext1 0057                  __ptext2 0550  
                __ptext3 050A                  __ptext4 065B                  __ptext5 05C6  
                __ptext6 074A                  __ptext7 0258                  __ptext8 0126  
                __ptext9 076B                  _cnt_Seg 007A          __size_of_pulsos 006E  
              _CNF_Color 058C                  _lectura 004E                  _dpowers 0346  
       ___aldiv@dividend 0024                  _time_ON 0047       __end_of_USART_Init 02C8  
                _sprintf 0057                  clrloop0 0775     end_of_initialization 0053  
          ??_EEPROM_Read 0020               _msj_deploy 00C3            ??_EEPROM_Save 0029  
                memset@c 0020                  memset@n 0022                  memset@p 0024  
             _msj_packet 00A0             ?_Color_Start 0070         ___aldiv@quotient 002B  
             CNF_Color@B 002F               CNF_Color@G 002E               CNF_Color@R 0032  
 USART_SendChar@caracter 0020            ??_CNF_Default 0033                _PORTBbits 0006  
              _PORTCbits 0007               ?_CNF_Color 002E                _TRISCbits 0087  
          EEPROM_Save@Qb 0028            EEPROM_Save@Qd 0024            EEPROM_Save@Qg 0027  
          EEPROM_Save@Qr 0026            EEPROM_Save@Qt 0025        __size_of_CNF_Load 005E  
      __size_of_CNF_Time 0016      __end_of_EEPROM_Read 06D9      __end_of_EEPROM_Save 050A  
      __size_of_MCU_Init 0009        __size_of_PIC_Init 001D           __end_of___wmul 0615  
      __size_of_TMR2_Cnf 000A           __end_of_memset 067D           __end_of_pulsos 0336  
          __pbitnvCOMMON 03D8        __size_of_PWM_Init 0010      start_initialization 0015  
    __end_of_CNF_Default 04C0            _msj_cnf_param 0190                 ??___wmul 0024  
             init_fetch0 0705              __pdataBANK0 0055              __pdataBANK1 00C3  
            __pdataBANK3 0190                 ??_memset 0024                 ??_pulsos 0070  
            ??_CNF_Color 0030              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020              sprintf@flag 003C              _EEPROM_Read 06BC  
            sprintf@prec 0040              _EEPROM_Save 04C0                __pnvBANK0 0065  
       ___lwdiv@dividend 0022                 ?___aldiv 0020                 ?___awdiv 0026  
               ?___lwdiv 0020                _direccion 004D                 ?___lwmod 0027  
   __size_of_Color_Start 000B        CNF_Time@tiempo_ON 0020              _centimeters 0045  
              __pstrings 0336              _CNF_Default 0466                _escritura 0077  
       ___lwdiv@quotient 0025                 ?_sprintf 002C                 _CNF_Load 0408  
               _CNF_Time 06D9          ___aldiv@divisor 0020        interrupt_function 0004  
        ___aldiv@counter 0029           ___wmul@product 0024                clear_ram0 0774  
               _MCU_Init 076B                 _PIR1bits 000C                 _PIC_Init 069F  
   USART_SendText@cadena 0021                 _TMR2_Cnf 0761      CNF_Distance@dist_ON 0020  
           EEPROM_Save@i 0029              __stringbase 0345                 _PWM_Init 073A  
      ___wmul@multiplier 0020  __size_of_USART_SendChar 000C  __size_of_USART_SendText 0028  
     USART_Init@baudrate 0033            _cnt_Deathline 0051               _EECON1bits 018C  
       __size_of___aldiv 009D         __size_of___awdiv 0069         __size_of___lwdiv 0046  
       __size_of___lwmod 003C       __end_of__stringtab 0346               sprintf@val 003E  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0024                 __ptext10 069F  
               __ptext11 0756                 __ptext20 06D9                 __ptext12 067D  
               __ptext21 06EF                 __ptext13 073A                 __ptext22 058C  
               __ptext14 0761                 __ptext23 05EE                 __ptext15 0408  
               __ptext24 039F                 __ptext16 06BC                 __ptext25 02C8  
               __ptext17 0466                 __ptext18 04C0                 __ptext19 0638  
               _distance 004B            ?_EEPROM_Write 0020         __size_of_sprintf 00CF  
           _msj_tst_uart 0055            __size_of_main 0095            __size_of_loop 0022  
             _INTCONbits 000B                 init_ram0 0709                 memset@p1 0025  
         ??_EEPROM_Write 0021                 intlevel1 0000                sprintf@ap 003D  
              sprintf@sp 0041         ___lwmod@dividend 0029             ?_EEPROM_Read 0070  
           ?_EEPROM_Save 0024            ?_CNF_Distance 0020                stringcode 0340  
             _OSCCONbits 008F       EEPROM_Read@address 0022           _distance_to_ON 0049  
         _USART_SendChar 074A             ?_CNF_Default 0070           _USART_SendText 05C6  
             _OPTION_REG 0081                 sprintf@c 0042                 sprintf@f 002C  
        ___lwmod@divisor 0027          ___lwmod@counter 002B                 stringdir 0340  
               stringtab 0336             ___aldiv@sign 002A           ??_CNF_Distance 0022  
             _USART_Init 0258      EEPROM_Write@address 0023            ??_Color_Start 0020  
